//
// File generated by rootcint at Tue Jun 25 14:17:25 2013

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME dIethdIethraid5dIhomedIknikolicdILRAnalysisdIincludedIArDictionary
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "ArDictionary.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void ArDetector_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_ArDetector(void *p = 0);
   static void *newArray_ArDetector(Long_t size, void *p);
   static void delete_ArDetector(void *p);
   static void deleteArray_ArDetector(void *p);
   static void destruct_ArDetector(void *p);
   static void streamer_ArDetector(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ArDetector*)
   {
      ::ArDetector *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ArDetector >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ArDetector", ::ArDetector::Class_Version(), "/eth/ethraid5/home/knikolic/LRAnalysis/include/ArDetector.hh", 18,
                  typeid(::ArDetector), DefineBehavior(ptr, ptr),
                  &::ArDetector::Dictionary, isa_proxy, 0,
                  sizeof(::ArDetector) );
      instance.SetNew(&new_ArDetector);
      instance.SetNewArray(&newArray_ArDetector);
      instance.SetDelete(&delete_ArDetector);
      instance.SetDeleteArray(&deleteArray_ArDetector);
      instance.SetDestructor(&destruct_ArDetector);
      instance.SetStreamerFunc(&streamer_ArDetector);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ArDetector*)
   {
      return GenerateInitInstanceLocal((::ArDetector*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ArDetector*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void ArConfiguration_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_ArConfiguration(void *p = 0);
   static void *newArray_ArConfiguration(Long_t size, void *p);
   static void delete_ArConfiguration(void *p);
   static void deleteArray_ArConfiguration(void *p);
   static void destruct_ArConfiguration(void *p);
   static void streamer_ArConfiguration(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ArConfiguration*)
   {
      ::ArConfiguration *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ArConfiguration >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ArConfiguration", ::ArConfiguration::Class_Version(), "/eth/ethraid5/home/knikolic/LRAnalysis/include/ArConfiguration.hh", 25,
                  typeid(::ArConfiguration), DefineBehavior(ptr, ptr),
                  &::ArConfiguration::Dictionary, isa_proxy, 0,
                  sizeof(::ArConfiguration) );
      instance.SetNew(&new_ArConfiguration);
      instance.SetNewArray(&newArray_ArConfiguration);
      instance.SetDelete(&delete_ArConfiguration);
      instance.SetDeleteArray(&deleteArray_ArConfiguration);
      instance.SetDestructor(&destruct_ArConfiguration);
      instance.SetStreamerFunc(&streamer_ArConfiguration);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ArConfiguration*)
   {
      return GenerateInitInstanceLocal((::ArConfiguration*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ArConfiguration*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void ArIO_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_ArIO(void *p = 0);
   static void *newArray_ArIO(Long_t size, void *p);
   static void delete_ArIO(void *p);
   static void deleteArray_ArIO(void *p);
   static void destruct_ArIO(void *p);
   static void streamer_ArIO(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ArIO*)
   {
      ::ArIO *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ArIO >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ArIO", ::ArIO::Class_Version(), "/eth/ethraid5/home/knikolic/LRAnalysis/include/ArIO.hh", 20,
                  typeid(::ArIO), DefineBehavior(ptr, ptr),
                  &::ArIO::Dictionary, isa_proxy, 0,
                  sizeof(::ArIO) );
      instance.SetNew(&new_ArIO);
      instance.SetNewArray(&newArray_ArIO);
      instance.SetDelete(&delete_ArIO);
      instance.SetDeleteArray(&deleteArray_ArIO);
      instance.SetDestructor(&destruct_ArIO);
      instance.SetStreamerFunc(&streamer_ArIO);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ArIO*)
   {
      return GenerateInitInstanceLocal((::ArIO*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ArIO*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void ArPMT_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_ArPMT(void *p = 0);
   static void *newArray_ArPMT(Long_t size, void *p);
   static void delete_ArPMT(void *p);
   static void deleteArray_ArPMT(void *p);
   static void destruct_ArPMT(void *p);
   static void streamer_ArPMT(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ArPMT*)
   {
      ::ArPMT *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ArPMT >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ArPMT", ::ArPMT::Class_Version(), "/eth/ethraid5/home/knikolic/LRAnalysis/include/ArPMT.hh", 20,
                  typeid(::ArPMT), DefineBehavior(ptr, ptr),
                  &::ArPMT::Dictionary, isa_proxy, 0,
                  sizeof(::ArPMT) );
      instance.SetNew(&new_ArPMT);
      instance.SetNewArray(&newArray_ArPMT);
      instance.SetDelete(&delete_ArPMT);
      instance.SetDeleteArray(&deleteArray_ArPMT);
      instance.SetDestructor(&destruct_ArPMT);
      instance.SetStreamerFunc(&streamer_ArPMT);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ArPMT*)
   {
      return GenerateInitInstanceLocal((::ArPMT*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ArPMT*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void ArRun_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_ArRun(void *p = 0);
   static void *newArray_ArRun(Long_t size, void *p);
   static void delete_ArRun(void *p);
   static void deleteArray_ArRun(void *p);
   static void destruct_ArRun(void *p);
   static void streamer_ArRun(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ArRun*)
   {
      ::ArRun *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ArRun >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ArRun", ::ArRun::Class_Version(), "/eth/ethraid5/home/knikolic/LRAnalysis/include/ArRun.hh", 34,
                  typeid(::ArRun), DefineBehavior(ptr, ptr),
                  &::ArRun::Dictionary, isa_proxy, 0,
                  sizeof(::ArRun) );
      instance.SetNew(&new_ArRun);
      instance.SetNewArray(&newArray_ArRun);
      instance.SetDelete(&delete_ArRun);
      instance.SetDeleteArray(&deleteArray_ArRun);
      instance.SetDestructor(&destruct_ArRun);
      instance.SetStreamerFunc(&streamer_ArRun);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ArRun*)
   {
      return GenerateInitInstanceLocal((::ArRun*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ArRun*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void ArAnalysis_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_ArAnalysis(void *p = 0);
   static void *newArray_ArAnalysis(Long_t size, void *p);
   static void delete_ArAnalysis(void *p);
   static void deleteArray_ArAnalysis(void *p);
   static void destruct_ArAnalysis(void *p);
   static void streamer_ArAnalysis(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ArAnalysis*)
   {
      ::ArAnalysis *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ArAnalysis >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ArAnalysis", ::ArAnalysis::Class_Version(), "/eth/ethraid5/home/knikolic/LRAnalysis/include/ArAnalysis.hh", 55,
                  typeid(::ArAnalysis), DefineBehavior(ptr, ptr),
                  &::ArAnalysis::Dictionary, isa_proxy, 0,
                  sizeof(::ArAnalysis) );
      instance.SetNew(&new_ArAnalysis);
      instance.SetNewArray(&newArray_ArAnalysis);
      instance.SetDelete(&delete_ArAnalysis);
      instance.SetDeleteArray(&deleteArray_ArAnalysis);
      instance.SetDestructor(&destruct_ArAnalysis);
      instance.SetStreamerFunc(&streamer_ArAnalysis);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ArAnalysis*)
   {
      return GenerateInitInstanceLocal((::ArAnalysis*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ArAnalysis*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void ArDisplay_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_ArDisplay(void *p);
   static void deleteArray_ArDisplay(void *p);
   static void destruct_ArDisplay(void *p);
   static void streamer_ArDisplay(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ArDisplay*)
   {
      ::ArDisplay *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ArDisplay >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ArDisplay", ::ArDisplay::Class_Version(), "/eth/ethraid5/home/knikolic/LRAnalysis/include/ArDisplay.hh", 14,
                  typeid(::ArDisplay), DefineBehavior(ptr, ptr),
                  &::ArDisplay::Dictionary, isa_proxy, 0,
                  sizeof(::ArDisplay) );
      instance.SetDelete(&delete_ArDisplay);
      instance.SetDeleteArray(&deleteArray_ArDisplay);
      instance.SetDestructor(&destruct_ArDisplay);
      instance.SetStreamerFunc(&streamer_ArDisplay);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ArDisplay*)
   {
      return GenerateInitInstanceLocal((::ArDisplay*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ArDisplay*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void ArRecoPMT_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_ArRecoPMT(void *p = 0);
   static void *newArray_ArRecoPMT(Long_t size, void *p);
   static void delete_ArRecoPMT(void *p);
   static void deleteArray_ArRecoPMT(void *p);
   static void destruct_ArRecoPMT(void *p);
   static void streamer_ArRecoPMT(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ArRecoPMT*)
   {
      ::ArRecoPMT *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ArRecoPMT >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ArRecoPMT", ::ArRecoPMT::Class_Version(), "/eth/ethraid5/home/knikolic/LRAnalysis/include/ArRecoPMT.hh", 20,
                  typeid(::ArRecoPMT), DefineBehavior(ptr, ptr),
                  &::ArRecoPMT::Dictionary, isa_proxy, 0,
                  sizeof(::ArRecoPMT) );
      instance.SetNew(&new_ArRecoPMT);
      instance.SetNewArray(&newArray_ArRecoPMT);
      instance.SetDelete(&delete_ArRecoPMT);
      instance.SetDeleteArray(&deleteArray_ArRecoPMT);
      instance.SetDestructor(&destruct_ArRecoPMT);
      instance.SetStreamerFunc(&streamer_ArRecoPMT);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ArRecoPMT*)
   {
      return GenerateInitInstanceLocal((::ArRecoPMT*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ArRecoPMT*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void ArOutput_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_ArOutput(void *p);
   static void deleteArray_ArOutput(void *p);
   static void destruct_ArOutput(void *p);
   static void streamer_ArOutput(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ArOutput*)
   {
      ::ArOutput *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ArOutput >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ArOutput", ::ArOutput::Class_Version(), "/eth/ethraid5/home/knikolic/LRAnalysis/include/ArOutput.hh", 18,
                  typeid(::ArOutput), DefineBehavior(ptr, ptr),
                  &::ArOutput::Dictionary, isa_proxy, 0,
                  sizeof(::ArOutput) );
      instance.SetDelete(&delete_ArOutput);
      instance.SetDeleteArray(&deleteArray_ArOutput);
      instance.SetDestructor(&destruct_ArOutput);
      instance.SetStreamerFunc(&streamer_ArOutput);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ArOutput*)
   {
      return GenerateInitInstanceLocal((::ArOutput*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ArOutput*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *ArDetector::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *ArDetector::Class_Name()
{
   return "ArDetector";
}

//______________________________________________________________________________
const char *ArDetector::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ArDetector*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int ArDetector::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ArDetector*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void ArDetector::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ArDetector*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *ArDetector::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ArDetector*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *ArConfiguration::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *ArConfiguration::Class_Name()
{
   return "ArConfiguration";
}

//______________________________________________________________________________
const char *ArConfiguration::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ArConfiguration*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int ArConfiguration::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ArConfiguration*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void ArConfiguration::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ArConfiguration*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *ArConfiguration::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ArConfiguration*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *ArIO::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *ArIO::Class_Name()
{
   return "ArIO";
}

//______________________________________________________________________________
const char *ArIO::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ArIO*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int ArIO::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ArIO*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void ArIO::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ArIO*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *ArIO::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ArIO*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *ArPMT::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *ArPMT::Class_Name()
{
   return "ArPMT";
}

//______________________________________________________________________________
const char *ArPMT::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ArPMT*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int ArPMT::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ArPMT*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void ArPMT::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ArPMT*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *ArPMT::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ArPMT*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *ArRun::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *ArRun::Class_Name()
{
   return "ArRun";
}

//______________________________________________________________________________
const char *ArRun::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ArRun*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int ArRun::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ArRun*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void ArRun::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ArRun*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *ArRun::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ArRun*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *ArAnalysis::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *ArAnalysis::Class_Name()
{
   return "ArAnalysis";
}

//______________________________________________________________________________
const char *ArAnalysis::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ArAnalysis*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int ArAnalysis::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ArAnalysis*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void ArAnalysis::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ArAnalysis*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *ArAnalysis::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ArAnalysis*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *ArDisplay::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *ArDisplay::Class_Name()
{
   return "ArDisplay";
}

//______________________________________________________________________________
const char *ArDisplay::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ArDisplay*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int ArDisplay::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ArDisplay*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void ArDisplay::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ArDisplay*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *ArDisplay::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ArDisplay*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *ArRecoPMT::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *ArRecoPMT::Class_Name()
{
   return "ArRecoPMT";
}

//______________________________________________________________________________
const char *ArRecoPMT::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ArRecoPMT*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int ArRecoPMT::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ArRecoPMT*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void ArRecoPMT::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ArRecoPMT*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *ArRecoPMT::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ArRecoPMT*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *ArOutput::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *ArOutput::Class_Name()
{
   return "ArOutput";
}

//______________________________________________________________________________
const char *ArOutput::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ArOutput*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int ArOutput::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ArOutput*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void ArOutput::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ArOutput*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *ArOutput::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ArOutput*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void ArRun::Streamer(TBuffer &R__b)
{
   // Stream an object of class ArRun.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      ePath.Streamer(R__b);
      R__b >> eRunNumber;
      R__b >> eFileNumber;
      R__b >> eEventNumber;
      R__b >> eUnixTime;
      R__b >> eNPMTs;
      R__b.ReadStaticArray((unsigned int*)eTTT);
      R__b.ReadStaticArray((int*)eDelay);
      R__b >> eNumberOfSamples;
      R__b >> eTotalNumberOfFiles;
      R__b >> eNumberOfEventsInFile;
      ePMTs->Streamer(R__b);
      R__b >> eVPMT;
      R__b >> eData;
      R__b.ReadStaticArray((int*)eBoardEventNumber);
      R__b >> eSumPeakIntegralTop;
      R__b >> eSumPeakIntegralBottom;
      R__b.CheckByteCount(R__s, R__c, ArRun::IsA());
   } else {
      R__c = R__b.WriteVersion(ArRun::IsA(), kTRUE);
      TObject::Streamer(R__b);
      ePath.Streamer(R__b);
      R__b << eRunNumber;
      R__b << eFileNumber;
      R__b << eEventNumber;
      R__b << eUnixTime;
      R__b << eNPMTs;
      R__b.WriteArray(eTTT, 4);
      R__b.WriteArray(eDelay, 24);
      R__b << eNumberOfSamples;
      R__b << eTotalNumberOfFiles;
      R__b << eNumberOfEventsInFile;
      ePMTs->Streamer(R__b);
      R__b << eVPMT;
      R__b << eData;
      R__b.WriteArray(eBoardEventNumber, 4);
      R__b << eSumPeakIntegralTop;
      R__b << eSumPeakIntegralBottom;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void ArRun::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ArRun.
      TClass *R__cl = ::ArRun::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ePath", &ePath);
      R__insp.InspectMember(ePath, "ePath.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eRunNumber", &eRunNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eFileNumber", &eFileNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eEventNumber", &eEventNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eUnixTime", &eUnixTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eNPMTs", &eNPMTs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eTTT[4]", eTTT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eDelay[24]", eDelay);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eNumberOfSamples", &eNumberOfSamples);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eTotalNumberOfFiles", &eTotalNumberOfFiles);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eNumberOfEventsInFile", &eNumberOfEventsInFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*ePMTs", &ePMTs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eVPMT", &eVPMT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eData", &eData);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eBoardEventNumber[4]", eBoardEventNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eSumPeakIntegralTop", &eSumPeakIntegralTop);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eSumPeakIntegralBottom", &eSumPeakIntegralBottom);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ArRun(void *p) {
      return  p ? new(p) ::ArRun : new ::ArRun;
   }
   static void *newArray_ArRun(Long_t nElements, void *p) {
      return p ? new(p) ::ArRun[nElements] : new ::ArRun[nElements];
   }
   // Wrapper around operator delete
   static void delete_ArRun(void *p) {
      delete ((::ArRun*)p);
   }
   static void deleteArray_ArRun(void *p) {
      delete [] ((::ArRun*)p);
   }
   static void destruct_ArRun(void *p) {
      typedef ::ArRun current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_ArRun(TBuffer &buf, void *obj) {
      ((::ArRun*)obj)->::ArRun::Streamer(buf);
   }
} // end of namespace ROOT for class ::ArRun

//______________________________________________________________________________
void ArConfiguration::Streamer(TBuffer &R__b)
{
   // Stream an object of class ArConfiguration.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      ePath.Streamer(R__b);
      R__b >> eRunNumber;
      eCurrentFileName.Streamer(R__b);
      R__b >> BitResolution;
      R__b >> SampleSize;
      R__b >> EventsInTheMask;
      R__b >> FileNumber;
      R__b >> FirstEvent;
      R__b >> LastEvent;
      EventsMaskFile.Streamer(R__b);
      FileList.Streamer(R__b);
      EventList.Streamer(R__b);
      CalibrationFile.Streamer(R__b);
      Calibration.Streamer(R__b);
      Delay.Streamer(R__b);
      R__b >> ApplyDelayCorrectionFromDAQInfo;
      R__b >> EvaluateChannelsFromVirtualChannel;
      R__b >> FakeSignalTime;
      R__b >> SingletIntegrationTime;
      R__b >> PedPeakFindingTimeMargin;
      R__b >> PeakFindingTimeMargin;
      R__b >> PedPeakFindingDisentangleTime;
      R__b >> PeakFindingDisentangleTime;
      R__b >> PedPeakFindingSigmaThreshold;
      R__b >> PeakFindingSigmaThreshold;
      Pedestal.Streamer(R__b);
      R__b >> VirtualChannelMask;
      VirtualChannelMaskList.Streamer(R__b);
      R__b >> StartPedestal;
      R__b >> StopPedestal;
      R__b >> StartPeakSignal;
      R__b >> StopPeakSignal;
      R__b >> ReferenceConversionFactor;
      R__b >> MaximumIntegrationTime;
      R__b.CheckByteCount(R__s, R__c, ArConfiguration::IsA());
   } else {
      R__c = R__b.WriteVersion(ArConfiguration::IsA(), kTRUE);
      TObject::Streamer(R__b);
      ePath.Streamer(R__b);
      R__b << eRunNumber;
      eCurrentFileName.Streamer(R__b);
      R__b << BitResolution;
      R__b << SampleSize;
      R__b << EventsInTheMask;
      R__b << FileNumber;
      R__b << FirstEvent;
      R__b << LastEvent;
      EventsMaskFile.Streamer(R__b);
      FileList.Streamer(R__b);
      EventList.Streamer(R__b);
      CalibrationFile.Streamer(R__b);
      Calibration.Streamer(R__b);
      Delay.Streamer(R__b);
      R__b << ApplyDelayCorrectionFromDAQInfo;
      R__b << EvaluateChannelsFromVirtualChannel;
      R__b << FakeSignalTime;
      R__b << SingletIntegrationTime;
      R__b << PedPeakFindingTimeMargin;
      R__b << PeakFindingTimeMargin;
      R__b << PedPeakFindingDisentangleTime;
      R__b << PeakFindingDisentangleTime;
      R__b << PedPeakFindingSigmaThreshold;
      R__b << PeakFindingSigmaThreshold;
      Pedestal.Streamer(R__b);
      R__b << VirtualChannelMask;
      VirtualChannelMaskList.Streamer(R__b);
      R__b << StartPedestal;
      R__b << StopPedestal;
      R__b << StartPeakSignal;
      R__b << StopPeakSignal;
      R__b << ReferenceConversionFactor;
      R__b << MaximumIntegrationTime;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void ArConfiguration::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ArConfiguration.
      TClass *R__cl = ::ArConfiguration::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ePath", &ePath);
      R__insp.InspectMember(ePath, "ePath.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eRunNumber", &eRunNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eCurrentFileName", &eCurrentFileName);
      R__insp.InspectMember(eCurrentFileName, "eCurrentFileName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BitResolution", &BitResolution);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "SampleSize", &SampleSize);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EventsInTheMask", &EventsInTheMask);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FileNumber", &FileNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FirstEvent", &FirstEvent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "LastEvent", &LastEvent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EventsMaskFile", &EventsMaskFile);
      R__insp.InspectMember(EventsMaskFile, "EventsMaskFile.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FileList", &FileList);
      R__insp.InspectMember(FileList, "FileList.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EventList", &EventList);
      R__insp.InspectMember(EventList, "EventList.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "CalibrationFile", &CalibrationFile);
      R__insp.InspectMember(CalibrationFile, "CalibrationFile.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Calibration", &Calibration);
      R__insp.InspectMember(Calibration, "Calibration.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Delay", &Delay);
      R__insp.InspectMember(Delay, "Delay.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ApplyDelayCorrectionFromDAQInfo", &ApplyDelayCorrectionFromDAQInfo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EvaluateChannelsFromVirtualChannel", &EvaluateChannelsFromVirtualChannel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FakeSignalTime", &FakeSignalTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "SingletIntegrationTime", &SingletIntegrationTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PedPeakFindingTimeMargin", &PedPeakFindingTimeMargin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PeakFindingTimeMargin", &PeakFindingTimeMargin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PedPeakFindingDisentangleTime", &PedPeakFindingDisentangleTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PeakFindingDisentangleTime", &PeakFindingDisentangleTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PedPeakFindingSigmaThreshold", &PedPeakFindingSigmaThreshold);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PeakFindingSigmaThreshold", &PeakFindingSigmaThreshold);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Pedestal", &Pedestal);
      R__insp.InspectMember(Pedestal, "Pedestal.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "VirtualChannelMask", &VirtualChannelMask);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "VirtualChannelMaskList", &VirtualChannelMaskList);
      R__insp.InspectMember(VirtualChannelMaskList, "VirtualChannelMaskList.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "StartPedestal", &StartPedestal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "StopPedestal", &StopPedestal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "StartPeakSignal", &StartPeakSignal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "StopPeakSignal", &StopPeakSignal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ReferenceConversionFactor", &ReferenceConversionFactor);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MaximumIntegrationTime", &MaximumIntegrationTime);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ArConfiguration(void *p) {
      return  p ? new(p) ::ArConfiguration : new ::ArConfiguration;
   }
   static void *newArray_ArConfiguration(Long_t nElements, void *p) {
      return p ? new(p) ::ArConfiguration[nElements] : new ::ArConfiguration[nElements];
   }
   // Wrapper around operator delete
   static void delete_ArConfiguration(void *p) {
      delete ((::ArConfiguration*)p);
   }
   static void deleteArray_ArConfiguration(void *p) {
      delete [] ((::ArConfiguration*)p);
   }
   static void destruct_ArConfiguration(void *p) {
      typedef ::ArConfiguration current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_ArConfiguration(TBuffer &buf, void *obj) {
      ((::ArConfiguration*)obj)->::ArConfiguration::Streamer(buf);
   }
} // end of namespace ROOT for class ::ArConfiguration

//______________________________________________________________________________
void ArDetector::Streamer(TBuffer &R__b)
{
   // Stream an object of class ArDetector.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> eID;
      eName.Streamer(R__b);
      eType.Streamer(R__b);
      RawData.Streamer(R__b);
      Data.Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, ArDetector::IsA());
   } else {
      R__c = R__b.WriteVersion(ArDetector::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << eID;
      eName.Streamer(R__b);
      eType.Streamer(R__b);
      RawData.Streamer(R__b);
      Data.Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void ArDetector::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ArDetector.
      TClass *R__cl = ::ArDetector::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eID", &eID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eName", &eName);
      R__insp.InspectMember(eName, "eName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eType", &eType);
      R__insp.InspectMember(eType, "eType.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "RawData", &RawData);
      R__insp.InspectMember(RawData, "RawData.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Data", &Data);
      R__insp.InspectMember(Data, "Data.");
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ArDetector(void *p) {
      return  p ? new(p) ::ArDetector : new ::ArDetector;
   }
   static void *newArray_ArDetector(Long_t nElements, void *p) {
      return p ? new(p) ::ArDetector[nElements] : new ::ArDetector[nElements];
   }
   // Wrapper around operator delete
   static void delete_ArDetector(void *p) {
      delete ((::ArDetector*)p);
   }
   static void deleteArray_ArDetector(void *p) {
      delete [] ((::ArDetector*)p);
   }
   static void destruct_ArDetector(void *p) {
      typedef ::ArDetector current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_ArDetector(TBuffer &buf, void *obj) {
      ((::ArDetector*)obj)->::ArDetector::Streamer(buf);
   }
} // end of namespace ROOT for class ::ArDetector

//______________________________________________________________________________
void ArPMT::Streamer(TBuffer &R__b)
{
   // Stream an object of class ArPMT.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      ArDetector::Streamer(R__b);
      R__b >> eFullScale;
      R__b >> eOffset;
      R__b >> eCoupling;
      R__b >> eBandWidth;
      R__b >> eDiscThrs;
      R__b >> ePeakFraction;
      R__b >> eCalibration;
      R__b >> eDelay;
      R__b >> ePedestal;
      R__b >> ePedTimeMin;
      R__b >> ePedTimeMax;
      R__b >> ePedMin;
      R__b >> ePedMax;
      R__b >> ePedMean;
      R__b >> ePedSigma;
      R__b >> ePedChi2;
      R__b >> ePedNpe;
      R__b >> ePedIntegral;
      R__b >> ePedIntegralPe;
      R__b >> ePedTimePe;
      R__b >> ePeakStartTime;
      R__b >> ePeakTime;
      R__b >> ePeakValue;
      R__b >> ePeakIsSaturated;
      R__b >> eNpe;
      R__b >> eIntegral;
      R__b >> eIntegralPe;
      R__b >> eIntegralPeS;
      R__b >> eTimePe;
      R__b >> eIntegralSinglet0;
      R__b >> eIntegralSinglet1;
      R__b >> eCR;
      R__b >> eCRPe;
      R__b >> eCRPeS;
      R__b >> eBranch;
      R__b >> eTree;
      R__b >> hPedestal;
      R__b >> fMyGaus;
      {
         vector<int> &R__stl =  ePeakTimes;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            int R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      {
         vector<double> &R__stl =  ePeakIntegral;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            double R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      {
         vector<double> &R__stl =  ePeakAmplitude;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            double R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      R__b >> eSumPeakIntegralPMT;
      RawData.Streamer(R__b);
      Data.Streamer(R__b);
      DataError.Streamer(R__b);
      R__b >> eNPeaks;
      Peaks.Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, ArPMT::IsA());
   } else {
      R__c = R__b.WriteVersion(ArPMT::IsA(), kTRUE);
      ArDetector::Streamer(R__b);
      R__b << eFullScale;
      R__b << eOffset;
      R__b << eCoupling;
      R__b << eBandWidth;
      R__b << eDiscThrs;
      R__b << ePeakFraction;
      R__b << eCalibration;
      R__b << eDelay;
      R__b << ePedestal;
      R__b << ePedTimeMin;
      R__b << ePedTimeMax;
      R__b << ePedMin;
      R__b << ePedMax;
      R__b << ePedMean;
      R__b << ePedSigma;
      R__b << ePedChi2;
      R__b << ePedNpe;
      R__b << ePedIntegral;
      R__b << ePedIntegralPe;
      R__b << ePedTimePe;
      R__b << ePeakStartTime;
      R__b << ePeakTime;
      R__b << ePeakValue;
      R__b << ePeakIsSaturated;
      R__b << eNpe;
      R__b << eIntegral;
      R__b << eIntegralPe;
      R__b << eIntegralPeS;
      R__b << eTimePe;
      R__b << eIntegralSinglet0;
      R__b << eIntegralSinglet1;
      R__b << eCR;
      R__b << eCRPe;
      R__b << eCRPeS;
      R__b << eBranch;
      R__b << eTree;
      R__b << (TObject*)hPedestal;
      R__b << fMyGaus;
      {
         vector<int> &R__stl =  ePeakTimes;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<int>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<double> &R__stl =  ePeakIntegral;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<double>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<double> &R__stl =  ePeakAmplitude;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<double>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      R__b << eSumPeakIntegralPMT;
      RawData.Streamer(R__b);
      Data.Streamer(R__b);
      DataError.Streamer(R__b);
      R__b << eNPeaks;
      Peaks.Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void ArPMT::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ArPMT.
      TClass *R__cl = ::ArPMT::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eFullScale", &eFullScale);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eOffset", &eOffset);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eCoupling", &eCoupling);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eBandWidth", &eBandWidth);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eDiscThrs", &eDiscThrs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ePeakFraction", &ePeakFraction);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eCalibration", &eCalibration);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eDelay", &eDelay);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ePedestal", &ePedestal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ePedTimeMin", &ePedTimeMin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ePedTimeMax", &ePedTimeMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ePedMin", &ePedMin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ePedMax", &ePedMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ePedMean", &ePedMean);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ePedSigma", &ePedSigma);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ePedChi2", &ePedChi2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ePedNpe", &ePedNpe);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ePedIntegral", &ePedIntegral);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ePedIntegralPe", &ePedIntegralPe);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ePedTimePe", &ePedTimePe);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ePeakStartTime", &ePeakStartTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ePeakTime", &ePeakTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ePeakValue", &ePeakValue);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ePeakIsSaturated", &ePeakIsSaturated);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eNpe", &eNpe);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eIntegral", &eIntegral);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eIntegralPe", &eIntegralPe);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eIntegralPeS", &eIntegralPeS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eTimePe", &eTimePe);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eIntegralSinglet0", &eIntegralSinglet0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eIntegralSinglet1", &eIntegralSinglet1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eCR", &eCR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eCRPe", &eCRPe);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eCRPeS", &eCRPeS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eBranch", &eBranch);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eTree", &eTree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hPedestal", &hPedestal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMyGaus", &fMyGaus);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ePeakTimes", (void*)&ePeakTimes);
      R__insp.InspectMember("vector<int>", (void*)&ePeakTimes, "ePeakTimes.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ePeakIntegral", (void*)&ePeakIntegral);
      R__insp.InspectMember("vector<double>", (void*)&ePeakIntegral, "ePeakIntegral.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ePeakAmplitude", (void*)&ePeakAmplitude);
      R__insp.InspectMember("vector<double>", (void*)&ePeakAmplitude, "ePeakAmplitude.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eSumPeakIntegralPMT", &eSumPeakIntegralPMT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "RawData", &RawData);
      R__insp.InspectMember(RawData, "RawData.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Data", &Data);
      R__insp.InspectMember(Data, "Data.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "DataError", &DataError);
      R__insp.InspectMember(DataError, "DataError.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eNPeaks", &eNPeaks);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Peaks", &Peaks);
      R__insp.InspectMember(Peaks, "Peaks.");
      ArDetector::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ArPMT(void *p) {
      return  p ? new(p) ::ArPMT : new ::ArPMT;
   }
   static void *newArray_ArPMT(Long_t nElements, void *p) {
      return p ? new(p) ::ArPMT[nElements] : new ::ArPMT[nElements];
   }
   // Wrapper around operator delete
   static void delete_ArPMT(void *p) {
      delete ((::ArPMT*)p);
   }
   static void deleteArray_ArPMT(void *p) {
      delete [] ((::ArPMT*)p);
   }
   static void destruct_ArPMT(void *p) {
      typedef ::ArPMT current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_ArPMT(TBuffer &buf, void *obj) {
      ((::ArPMT*)obj)->::ArPMT::Streamer(buf);
   }
} // end of namespace ROOT for class ::ArPMT

//______________________________________________________________________________
void ArRecoPMT::Streamer(TBuffer &R__b)
{
   // Stream an object of class ArRecoPMT.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> eID;
      eName.Streamer(R__b);
      eType.Streamer(R__b);
      R__b >> eCalibration;
      R__b >> eDelay;
      R__b >> ePedestal;
      R__b >> ePedTimeMin;
      R__b >> ePedTimeMax;
      R__b >> ePedMin;
      R__b >> ePedMax;
      R__b >> ePedMean;
      R__b >> ePedSigma;
      R__b >> ePedChi2;
      R__b >> ePedNpe;
      R__b >> ePedIntegral;
      R__b >> ePedIntegralPe;
      R__b >> ePedTimePe;
      R__b >> ePeakStartTime;
      R__b >> ePeakTime;
      R__b >> ePeakValue;
      R__b >> ePeakIsSaturated;
      R__b >> eNPeaks;
      R__b >> eNpe;
      R__b >> eIntegral;
      R__b >> eIntegralPe;
      R__b >> eIntegralPeS;
      R__b >> eTimePe;
      R__b >> eIntegralSinglet0;
      R__b >> eIntegralSinglet1;
      R__b >> eCR;
      R__b >> eCRPe;
      R__b >> eCRPeS;
      {
         vector<int> &R__stl =  ePeakTimes;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            int R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      {
         vector<double> &R__stl =  ePeakIntegral;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            double R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      {
         vector<double> &R__stl =  ePeakAmplitude;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            double R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      R__b >> eSumPeakIntegralPMT;
      R__b.CheckByteCount(R__s, R__c, ArRecoPMT::IsA());
   } else {
      R__c = R__b.WriteVersion(ArRecoPMT::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << eID;
      eName.Streamer(R__b);
      eType.Streamer(R__b);
      R__b << eCalibration;
      R__b << eDelay;
      R__b << ePedestal;
      R__b << ePedTimeMin;
      R__b << ePedTimeMax;
      R__b << ePedMin;
      R__b << ePedMax;
      R__b << ePedMean;
      R__b << ePedSigma;
      R__b << ePedChi2;
      R__b << ePedNpe;
      R__b << ePedIntegral;
      R__b << ePedIntegralPe;
      R__b << ePedTimePe;
      R__b << ePeakStartTime;
      R__b << ePeakTime;
      R__b << ePeakValue;
      R__b << ePeakIsSaturated;
      R__b << eNPeaks;
      R__b << eNpe;
      R__b << eIntegral;
      R__b << eIntegralPe;
      R__b << eIntegralPeS;
      R__b << eTimePe;
      R__b << eIntegralSinglet0;
      R__b << eIntegralSinglet1;
      R__b << eCR;
      R__b << eCRPe;
      R__b << eCRPeS;
      {
         vector<int> &R__stl =  ePeakTimes;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<int>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<double> &R__stl =  ePeakIntegral;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<double>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<double> &R__stl =  ePeakAmplitude;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<double>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      R__b << eSumPeakIntegralPMT;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void ArRecoPMT::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ArRecoPMT.
      TClass *R__cl = ::ArRecoPMT::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eID", &eID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eName", &eName);
      R__insp.InspectMember(eName, "eName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eType", &eType);
      R__insp.InspectMember(eType, "eType.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eCalibration", &eCalibration);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eDelay", &eDelay);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ePedestal", &ePedestal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ePedTimeMin", &ePedTimeMin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ePedTimeMax", &ePedTimeMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ePedMin", &ePedMin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ePedMax", &ePedMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ePedMean", &ePedMean);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ePedSigma", &ePedSigma);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ePedChi2", &ePedChi2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ePedNpe", &ePedNpe);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ePedIntegral", &ePedIntegral);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ePedIntegralPe", &ePedIntegralPe);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ePedTimePe", &ePedTimePe);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ePeakStartTime", &ePeakStartTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ePeakTime", &ePeakTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ePeakValue", &ePeakValue);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ePeakIsSaturated", &ePeakIsSaturated);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eNPeaks", &eNPeaks);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eNpe", &eNpe);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eIntegral", &eIntegral);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eIntegralPe", &eIntegralPe);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eIntegralPeS", &eIntegralPeS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eTimePe", &eTimePe);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eIntegralSinglet0", &eIntegralSinglet0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eIntegralSinglet1", &eIntegralSinglet1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eCR", &eCR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eCRPe", &eCRPe);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eCRPeS", &eCRPeS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ePeakTimes", (void*)&ePeakTimes);
      R__insp.InspectMember("vector<int>", (void*)&ePeakTimes, "ePeakTimes.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ePeakIntegral", (void*)&ePeakIntegral);
      R__insp.InspectMember("vector<double>", (void*)&ePeakIntegral, "ePeakIntegral.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ePeakAmplitude", (void*)&ePeakAmplitude);
      R__insp.InspectMember("vector<double>", (void*)&ePeakAmplitude, "ePeakAmplitude.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eSumPeakIntegralPMT", &eSumPeakIntegralPMT);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ArRecoPMT(void *p) {
      return  p ? new(p) ::ArRecoPMT : new ::ArRecoPMT;
   }
   static void *newArray_ArRecoPMT(Long_t nElements, void *p) {
      return p ? new(p) ::ArRecoPMT[nElements] : new ::ArRecoPMT[nElements];
   }
   // Wrapper around operator delete
   static void delete_ArRecoPMT(void *p) {
      delete ((::ArRecoPMT*)p);
   }
   static void deleteArray_ArRecoPMT(void *p) {
      delete [] ((::ArRecoPMT*)p);
   }
   static void destruct_ArRecoPMT(void *p) {
      typedef ::ArRecoPMT current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_ArRecoPMT(TBuffer &buf, void *obj) {
      ((::ArRecoPMT*)obj)->::ArRecoPMT::Streamer(buf);
   }
} // end of namespace ROOT for class ::ArRecoPMT

//______________________________________________________________________________
void ArAnalysis::Streamer(TBuffer &R__b)
{
   // Stream an object of class ArAnalysis.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> eEventsToRead;
      R__b >> eSamplesToRead;
      R__b >> eChannelsToRead;
      R__b >> eEdge;
      R__b >> eIntTime;
      R__b >> eNoiseCut;
      R__b >> eTriggered;
      R__b >> eRun;
      R__b >> eMeanRun;
      R__b.CheckByteCount(R__s, R__c, ArAnalysis::IsA());
   } else {
      R__c = R__b.WriteVersion(ArAnalysis::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << eEventsToRead;
      R__b << eSamplesToRead;
      R__b << eChannelsToRead;
      R__b << eEdge;
      R__b << eIntTime;
      R__b << eNoiseCut;
      R__b << eTriggered;
      R__b << eRun;
      R__b << eMeanRun;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void ArAnalysis::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ArAnalysis.
      TClass *R__cl = ::ArAnalysis::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eEventsToRead", &eEventsToRead);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eSamplesToRead", &eSamplesToRead);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eChannelsToRead", &eChannelsToRead);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eEdge", &eEdge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eIntTime", &eIntTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eNoiseCut", &eNoiseCut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eTriggered", &eTriggered);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eRun", &eRun);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eMeanRun", &eMeanRun);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ArAnalysis(void *p) {
      return  p ? new(p) ::ArAnalysis : new ::ArAnalysis;
   }
   static void *newArray_ArAnalysis(Long_t nElements, void *p) {
      return p ? new(p) ::ArAnalysis[nElements] : new ::ArAnalysis[nElements];
   }
   // Wrapper around operator delete
   static void delete_ArAnalysis(void *p) {
      delete ((::ArAnalysis*)p);
   }
   static void deleteArray_ArAnalysis(void *p) {
      delete [] ((::ArAnalysis*)p);
   }
   static void destruct_ArAnalysis(void *p) {
      typedef ::ArAnalysis current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_ArAnalysis(TBuffer &buf, void *obj) {
      ((::ArAnalysis*)obj)->::ArAnalysis::Streamer(buf);
   }
} // end of namespace ROOT for class ::ArAnalysis

//______________________________________________________________________________
void ArIO::Streamer(TBuffer &R__b)
{
   // Stream an object of class ArIO.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, ArIO::IsA());
   } else {
      R__c = R__b.WriteVersion(ArIO::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void ArIO::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ArIO.
      TClass *R__cl = ::ArIO::IsA();
      if (R__cl || R__insp.IsA()) { }
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ArIO(void *p) {
      return  p ? new(p) ::ArIO : new ::ArIO;
   }
   static void *newArray_ArIO(Long_t nElements, void *p) {
      return p ? new(p) ::ArIO[nElements] : new ::ArIO[nElements];
   }
   // Wrapper around operator delete
   static void delete_ArIO(void *p) {
      delete ((::ArIO*)p);
   }
   static void deleteArray_ArIO(void *p) {
      delete [] ((::ArIO*)p);
   }
   static void destruct_ArIO(void *p) {
      typedef ::ArIO current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_ArIO(TBuffer &buf, void *obj) {
      ((::ArIO*)obj)->::ArIO::Streamer(buf);
   }
} // end of namespace ROOT for class ::ArIO

//______________________________________________________________________________
void ArOutput::Streamer(TBuffer &R__b)
{
   // Stream an object of class ArOutput.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      eFileName.Streamer(R__b);
      R__b >> eFile;
      R__b >> eTreeData;
      R__b >> eTreeMeanTrace;
      R__b >> eRunNumber;
      R__b >> eEventNumber;
      R__b.ReadStaticArray((int*)eBoardEventNumber);
      R__b >> eNPMTs;
      R__b.ReadStaticArray((unsigned int*)eTTT);
      R__b >> eNSamples;
      eRecoPMTs->Streamer(R__b);
      R__b >> eRecoVPMT;
      R__b >> ePMT;
      R__b >> eTime;
      R__b >> eData;
      R__b >> eDataError;
      R__b >> eUnixTime;
      R__b >> eSumPeakIntegralTop;
      R__b >> eSumPeakIntegralBottom;
      R__b >> eSumPeakIntegralTotal;
      R__b.CheckByteCount(R__s, R__c, ArOutput::IsA());
   } else {
      R__c = R__b.WriteVersion(ArOutput::IsA(), kTRUE);
      TObject::Streamer(R__b);
      eFileName.Streamer(R__b);
      R__b << eFile;
      R__b << eTreeData;
      R__b << eTreeMeanTrace;
      R__b << eRunNumber;
      R__b << eEventNumber;
      R__b.WriteArray(eBoardEventNumber, 4);
      R__b << eNPMTs;
      R__b.WriteArray(eTTT, 4);
      R__b << eNSamples;
      eRecoPMTs->Streamer(R__b);
      R__b << eRecoVPMT;
      R__b << ePMT;
      R__b << eTime;
      R__b << eData;
      R__b << eDataError;
      R__b << eUnixTime;
      R__b << eSumPeakIntegralTop;
      R__b << eSumPeakIntegralBottom;
      R__b << eSumPeakIntegralTotal;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void ArOutput::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ArOutput.
      TClass *R__cl = ::ArOutput::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eFileName", &eFileName);
      R__insp.InspectMember(eFileName, "eFileName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eFile", &eFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eTreeData", &eTreeData);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eTreeMeanTrace", &eTreeMeanTrace);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eRunNumber", &eRunNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eEventNumber", &eEventNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eBoardEventNumber[4]", eBoardEventNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eNPMTs", &eNPMTs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eTTT[4]", eTTT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eNSamples", &eNSamples);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eRecoPMTs", &eRecoPMTs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eRecoVPMT", &eRecoVPMT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ePMT", &ePMT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eTime", &eTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eData", &eData);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eDataError", &eDataError);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eUnixTime", &eUnixTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eSumPeakIntegralTop", &eSumPeakIntegralTop);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eSumPeakIntegralBottom", &eSumPeakIntegralBottom);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eSumPeakIntegralTotal", &eSumPeakIntegralTotal);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_ArOutput(void *p) {
      delete ((::ArOutput*)p);
   }
   static void deleteArray_ArOutput(void *p) {
      delete [] ((::ArOutput*)p);
   }
   static void destruct_ArOutput(void *p) {
      typedef ::ArOutput current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_ArOutput(TBuffer &buf, void *obj) {
      ((::ArOutput*)obj)->::ArOutput::Streamer(buf);
   }
} // end of namespace ROOT for class ::ArOutput

//______________________________________________________________________________
void ArDisplay::Streamer(TBuffer &R__b)
{
   // Stream an object of class ArDisplay.

   TGMainFrame::Streamer(R__b);
}

//______________________________________________________________________________
void ArDisplay::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ArDisplay.
      TClass *R__cl = ::ArDisplay::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEcanvas", &fEcanvas);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fStatusBar", &fStatusBar);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fAnalysis", &fAnalysis);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRun", &fRun);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEventNumber", &fEventNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EventNumber", &EventNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTextButtonAutomaticView", &fTextButtonAutomaticView);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*cTraceAll", &cTraceAll);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*cTraceSum", &cTraceSum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*cPlotsPeakTime", &cPlotsPeakTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*cPlotsCRvsIntegral", &cPlotsCRvsIntegral);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*cPlotsPedestal", &cPlotsPedestal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*graph", &graph);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*frame", &frame);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hPeakTime", &hPeakTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hCRvsIntegral", &hCRvsIntegral);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hPedestal", &hPedestal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Time", &Time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*ped_line", &ped_line);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*peaktime_line", &peaktime_line);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*peakstarttime_line", &peakstarttime_line);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*pedtime_line", &pedtime_line);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*analysis_text", &analysis_text);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "margin", &margin);
      TGMainFrame::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_ArDisplay(void *p) {
      delete ((::ArDisplay*)p);
   }
   static void deleteArray_ArDisplay(void *p) {
      delete [] ((::ArDisplay*)p);
   }
   static void destruct_ArDisplay(void *p) {
      typedef ::ArDisplay current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_ArDisplay(TBuffer &buf, void *obj) {
      ((::ArDisplay*)obj)->::ArDisplay::Streamer(buf);
   }
} // end of namespace ROOT for class ::ArDisplay

namespace ROOT {
   void vectorlEdoublegR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEdoublegR_Dictionary();
   static void *new_vectorlEdoublegR(void *p = 0);
   static void *newArray_vectorlEdoublegR(Long_t size, void *p);
   static void delete_vectorlEdoublegR(void *p);
   static void deleteArray_vectorlEdoublegR(void *p);
   static void destruct_vectorlEdoublegR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<double>*)
   {
      vector<double> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<double>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<double>", -2, "vector.dll", 0,
                  typeid(vector<double>), DefineBehavior(ptr, ptr),
                  0, &vectorlEdoublegR_Dictionary, isa_proxy, 0,
                  sizeof(vector<double>) );
      instance.SetNew(&new_vectorlEdoublegR);
      instance.SetNewArray(&newArray_vectorlEdoublegR);
      instance.SetDelete(&delete_vectorlEdoublegR);
      instance.SetDeleteArray(&deleteArray_vectorlEdoublegR);
      instance.SetDestructor(&destruct_vectorlEdoublegR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<double> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<double>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEdoublegR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<double>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEdoublegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double> : new vector<double>;
   }
   static void *newArray_vectorlEdoublegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double>[nElements] : new vector<double>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEdoublegR(void *p) {
      delete ((vector<double>*)p);
   }
   static void deleteArray_vectorlEdoublegR(void *p) {
      delete [] ((vector<double>*)p);
   }
   static void destruct_vectorlEdoublegR(void *p) {
      typedef vector<double> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<double>

namespace ROOT {
   void vectorlEintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEintgR_Dictionary();
   static void *new_vectorlEintgR(void *p = 0);
   static void *newArray_vectorlEintgR(Long_t size, void *p);
   static void delete_vectorlEintgR(void *p);
   static void deleteArray_vectorlEintgR(void *p);
   static void destruct_vectorlEintgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<int>*)
   {
      vector<int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<int>", -2, "/sw/ROOT/root_5.34.03/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<int>), DefineBehavior(ptr, ptr),
                  0, &vectorlEintgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<int>) );
      instance.SetNew(&new_vectorlEintgR);
      instance.SetNewArray(&newArray_vectorlEintgR);
      instance.SetDelete(&delete_vectorlEintgR);
      instance.SetDeleteArray(&deleteArray_vectorlEintgR);
      instance.SetDestructor(&destruct_vectorlEintgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEintgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<int>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int> : new vector<int>;
   }
   static void *newArray_vectorlEintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int>[nElements] : new vector<int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEintgR(void *p) {
      delete ((vector<int>*)p);
   }
   static void deleteArray_vectorlEintgR(void *p) {
      delete [] ((vector<int>*)p);
   }
   static void destruct_vectorlEintgR(void *p) {
      typedef vector<int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<int>

/********************************************************
* /eth/ethraid5/home/knikolic/LRAnalysis/include/ArDictionary.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableArDictionary();

extern "C" void G__set_cpp_environmentArDictionary() {
  G__cpp_reset_tagtableArDictionary();
}
#include <new>
extern "C" int G__cpp_dllrevArDictionary() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* ArDetector */
static int G__ArDictionary_759_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ArDetector* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ArDetector[n];
     } else {
       p = new((void*) gvp) ArDetector[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ArDetector;
     } else {
       p = new((void*) gvp) ArDetector;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ArDictionaryLN_ArDetector));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_759_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ArDetector*) G__getstructoffset())->ID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_759_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = ((ArDetector*) G__getstructoffset())->Name();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_759_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = ((ArDetector*) G__getstructoffset())->Type();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_759_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArDetector*) G__getstructoffset())->SetID((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_759_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArDetector*) G__getstructoffset())->SetName(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_759_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArDetector*) G__getstructoffset())->SetType(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_759_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ArDetector::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_759_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ArDetector::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_759_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ArDetector::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_759_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ArDetector::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_759_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArDetector*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_759_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ArDetector::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_759_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ArDetector::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_759_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ArDetector::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_759_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ArDetector::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ArDictionary_759_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ArDetector* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ArDetector(*(ArDetector*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ArDictionaryLN_ArDetector));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ArDetector G__TArDetector;
static int G__ArDictionary_759_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ArDetector*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ArDetector*) (soff+(sizeof(ArDetector)*i)))->~G__TArDetector();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ArDetector*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ArDetector*) (soff))->~G__TArDetector();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ArDictionary_759_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ArDetector* dest = (ArDetector*) G__getstructoffset();
   *dest = *(ArDetector*) libp->para[0].ref;
   const ArDetector& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ArConfiguration */
static int G__ArDictionary_760_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ArConfiguration* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ArConfiguration[n];
     } else {
       p = new((void*) gvp) ArConfiguration[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ArConfiguration;
     } else {
       p = new((void*) gvp) ArConfiguration;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ArDictionaryLN_ArConfiguration));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_760_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ArConfiguration* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ArConfiguration((const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ArConfiguration((const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ArDictionaryLN_ArConfiguration));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_760_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArConfiguration*) G__getstructoffset())->Reset();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_760_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = ((ArConfiguration*) G__getstructoffset())->Path();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_760_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ArConfiguration*) G__getstructoffset())->RunNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_760_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArConfiguration*) G__getstructoffset())->SetPath((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_760_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArConfiguration*) G__getstructoffset())->SetRunNumber((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_760_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((ArConfiguration*) G__getstructoffset())->Print((FILE*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((ArConfiguration*) G__getstructoffset())->Print();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_760_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ArConfiguration*) G__getstructoffset())->Load());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_760_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ArConfiguration*) G__getstructoffset())->ReadMask(*(ifstream*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_760_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ArConfiguration*) G__getstructoffset())->LoadEventsMaskFile());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_760_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ArConfiguration*) G__getstructoffset())->PrintMask());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_760_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ArConfiguration*) G__getstructoffset())->ReadCalibration(*(ifstream*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_760_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ArConfiguration*) G__getstructoffset())->ReadDelay(*(ifstream*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_760_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ArConfiguration*) G__getstructoffset())->ReadPedestal(*(ifstream*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_760_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ArConfiguration*) G__getstructoffset())->ReadVirtualChannelMask(*(ifstream*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_760_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ArConfiguration::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_760_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ArConfiguration::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_760_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ArConfiguration::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_760_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ArConfiguration::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_760_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArConfiguration*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_760_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ArConfiguration::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_760_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ArConfiguration::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_760_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ArConfiguration::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_760_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ArConfiguration::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ArDictionary_760_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ArConfiguration* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ArConfiguration(*(ArConfiguration*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ArDictionaryLN_ArConfiguration));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ArConfiguration G__TArConfiguration;
static int G__ArDictionary_760_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ArConfiguration*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ArConfiguration*) (soff+(sizeof(ArConfiguration)*i)))->~G__TArConfiguration();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ArConfiguration*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ArConfiguration*) (soff))->~G__TArConfiguration();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ArDictionary_760_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ArConfiguration* dest = (ArConfiguration*) G__getstructoffset();
   *dest = *(ArConfiguration*) libp->para[0].ref;
   const ArConfiguration& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ArIO */
static int G__ArDictionary_761_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ArIO* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ArIO[n];
     } else {
       p = new((void*) gvp) ArIO[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ArIO;
     } else {
       p = new((void*) gvp) ArIO;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ArDictionaryLN_ArIO));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_761_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = ArIO::i2s((int) G__int(libp->para[0]));
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_761_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = ArIO::r2s((int) G__int(libp->para[0]));
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_761_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ArIO::MakeFileName(*(TString*) libp->para[0].ref, (const char*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_761_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ArIO::PrintColor((FILE*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_761_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ArIO::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_761_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ArIO::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_761_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ArIO::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_761_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ArIO::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_761_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArIO*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_761_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ArIO::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_761_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ArIO::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_761_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ArIO::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_761_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ArIO::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ArDictionary_761_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ArIO* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ArIO(*(ArIO*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ArDictionaryLN_ArIO));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ArIO G__TArIO;
static int G__ArDictionary_761_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ArIO*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ArIO*) (soff+(sizeof(ArIO)*i)))->~G__TArIO();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ArIO*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ArIO*) (soff))->~G__TArIO();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ArDictionary_761_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ArIO* dest = (ArIO*) G__getstructoffset();
   *dest = *(ArIO*) libp->para[0].ref;
   const ArIO& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ArPMT */
static int G__ArDictionary_762_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ArPMT* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ArPMT[n];
     } else {
       p = new((void*) gvp) ArPMT[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ArPMT;
     } else {
       p = new((void*) gvp) ArPMT;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ArDictionaryLN_ArPMT));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_762_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArPMT*) G__getstructoffset())->Reset();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_762_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ArPMT*) G__getstructoffset())->FullScale());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_762_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ArPMT*) G__getstructoffset())->Offset());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_762_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 108, (long) ((ArPMT*) G__getstructoffset())->Coupling());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_762_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 108, (long) ((ArPMT*) G__getstructoffset())->BandWidth());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_762_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ArPMT*) G__getstructoffset())->DiscThrs());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_762_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ArPMT*) G__getstructoffset())->PeakFraction());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_762_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ArPMT*) G__getstructoffset())->Calibration());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_762_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ArPMT*) G__getstructoffset())->Delay());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_762_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ArPMT*) G__getstructoffset())->Pedestal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_762_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ArPMT*) G__getstructoffset())->PedTimeMin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_762_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ArPMT*) G__getstructoffset())->PedTimeMax());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_762_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ArPMT*) G__getstructoffset())->PedMin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_762_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ArPMT*) G__getstructoffset())->PedMax());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_762_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ArPMT*) G__getstructoffset())->PedMean());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_762_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ArPMT*) G__getstructoffset())->PedSigma());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_762_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ArPMT*) G__getstructoffset())->PedChi2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_762_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ArPMT*) G__getstructoffset())->PedNpe());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_762_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ArPMT*) G__getstructoffset())->PedIntegral());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_762_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ArPMT*) G__getstructoffset())->PedIntegralPe());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_762_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ArPMT*) G__getstructoffset())->PedTimePe());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_762_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ArPMT*) G__getstructoffset())->PeakStartTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_762_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ArPMT*) G__getstructoffset())->PeakTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_762_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ArPMT*) G__getstructoffset())->PeakValue());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_762_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ArPMT*) G__getstructoffset())->PeakIsSaturated());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_762_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ArPMT*) G__getstructoffset())->NPeaks());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_762_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ArPMT*) G__getstructoffset())->Npe());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_762_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<int>* pobj;
         vector<int> xobj = ((ArPMT*) G__getstructoffset())->PeakTimes();
         pobj = new vector<int>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_762_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((ArPMT*) G__getstructoffset())->PeakIntegral();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_762_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((ArPMT*) G__getstructoffset())->PeakAmplitude();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_762_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ArPMT*) G__getstructoffset())->SumPeakIntegralPMT());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_762_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ArPMT*) G__getstructoffset())->Integral());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_762_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ArPMT*) G__getstructoffset())->IntegralPe());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_762_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ArPMT*) G__getstructoffset())->IntegralPeS());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_762_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ArPMT*) G__getstructoffset())->TimePe());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_762_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ArPMT*) G__getstructoffset())->IntegralSinglet0());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_762_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ArPMT*) G__getstructoffset())->IntegralSinglet1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_762_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ArPMT*) G__getstructoffset())->CR());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_762_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ArPMT*) G__getstructoffset())->CRPe());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_762_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ArPMT*) G__getstructoffset())->CRPeS());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_762_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((ArPMT*) G__getstructoffset())->Branch());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_762_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((ArPMT*) G__getstructoffset())->Tree());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_762_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((ArPMT*) G__getstructoffset())->HPedestal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_762_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArPMT*) G__getstructoffset())->SetFullScale((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_762_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArPMT*) G__getstructoffset())->SetOffset((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_762_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArPMT*) G__getstructoffset())->SetCoupling((Long_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_762_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArPMT*) G__getstructoffset())->SetBandWidth((Long_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_762_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArPMT*) G__getstructoffset())->SetDiscThrs((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_762_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArPMT*) G__getstructoffset())->SetCalibration((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_762_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArPMT*) G__getstructoffset())->SetDelay((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_762_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArPMT*) G__getstructoffset())->SetPedestal((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_762_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArPMT*) G__getstructoffset())->SetPeakFraction((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_762_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArPMT*) G__getstructoffset())->SetPedTimeMin((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_762_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArPMT*) G__getstructoffset())->SetPedTimeMax((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_762_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArPMT*) G__getstructoffset())->SetPedMin((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_762_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArPMT*) G__getstructoffset())->SetPedMax((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_762_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArPMT*) G__getstructoffset())->SetPedMean((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_762_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArPMT*) G__getstructoffset())->SetPedSigma((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_762_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArPMT*) G__getstructoffset())->SetPedChi2((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_762_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArPMT*) G__getstructoffset())->SetPedNpe((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_762_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArPMT*) G__getstructoffset())->SetPedIntegral((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_762_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArPMT*) G__getstructoffset())->SetPedIntegralPe((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_762_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArPMT*) G__getstructoffset())->SetPedTimePe((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_762_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArPMT*) G__getstructoffset())->SetPeakStartTime((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_762_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArPMT*) G__getstructoffset())->SetPeakTime((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_762_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArPMT*) G__getstructoffset())->SetPeakValue((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_762_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArPMT*) G__getstructoffset())->SetPeakIsSaturated((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_762_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArPMT*) G__getstructoffset())->SetNPeaks((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_762_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArPMT*) G__getstructoffset())->SetNpe((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_762_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArPMT*) G__getstructoffset())->SetIntegral((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_762_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArPMT*) G__getstructoffset())->SetIntegralPe((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_762_0_73(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArPMT*) G__getstructoffset())->SetIntegralPeS((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_762_0_74(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArPMT*) G__getstructoffset())->SetTimePe((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_762_0_75(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArPMT*) G__getstructoffset())->SetIntegralSinglet0((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_762_0_76(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArPMT*) G__getstructoffset())->SetIntegralSinglet1((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_762_0_77(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArPMT*) G__getstructoffset())->SetCR((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_762_0_78(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArPMT*) G__getstructoffset())->SetCRPe((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_762_0_79(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArPMT*) G__getstructoffset())->SetCRPeS((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_762_0_80(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArPMT*) G__getstructoffset())->SetBranch((TBranch*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_762_0_81(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArPMT*) G__getstructoffset())->SetTree((TTree*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_762_0_82(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArPMT*) G__getstructoffset())->SetTree((TFile*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_762_0_83(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ArPMT*) G__getstructoffset())->LoadEvent((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_762_0_84(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArPMT*) G__getstructoffset())->FindPeaks((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_762_0_85(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArPMT*) G__getstructoffset())->CheckPeakSaturation();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_762_0_86(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArPMT*) G__getstructoffset())->CountPeaks((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_762_0_87(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArPMT*) G__getstructoffset())->SetPedestalTimeRange((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_762_0_88(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArPMT*) G__getstructoffset())->RawEvaluatePedestal();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_762_0_89(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArPMT*) G__getstructoffset())->EvaluatePedestalWithGaussianFit();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_762_0_90(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArPMT*) G__getstructoffset())->EvaluatePedestalWithPhotonSuppression();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_762_0_91(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArPMT*) G__getstructoffset())->EvaluatePeakStartTime((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_762_0_92(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArPMT*) G__getstructoffset())->EvaluateIntegral((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_762_0_93(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArPMT*) G__getstructoffset())->FFT(*(TArrayD*) libp->para[0].ref, (unsigned long) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_762_0_94(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArPMT*) G__getstructoffset())->FilterBackground((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_762_0_95(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArPMT*) G__getstructoffset())->ScaleData((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_762_0_96(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((ArPMT*) G__getstructoffset())->PrintData((FILE*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((ArPMT*) G__getstructoffset())->PrintData();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_762_0_97(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((ArPMT*) G__getstructoffset())->Print((FILE*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((ArPMT*) G__getstructoffset())->Print();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_762_0_98(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((ArPMT*) G__getstructoffset())->PrintReco((FILE*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((ArPMT*) G__getstructoffset())->PrintReco();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_762_0_99(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((ArPMT*) G__getstructoffset())->PrintRawData((FILE*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((ArPMT*) G__getstructoffset())->PrintRawData();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_762_0_100(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArPMT*) G__getstructoffset())->ClearHistograms();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_762_0_101(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ArPMT::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_762_0_102(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ArPMT::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_762_0_103(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ArPMT::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_762_0_104(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ArPMT::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_762_0_108(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArPMT*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_762_0_109(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ArPMT::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_762_0_110(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ArPMT::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_762_0_111(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ArPMT::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_762_0_112(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ArPMT::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ArDictionary_762_0_113(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ArPMT* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ArPMT(*(ArPMT*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ArDictionaryLN_ArPMT));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ArPMT G__TArPMT;
static int G__ArDictionary_762_0_114(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ArPMT*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ArPMT*) (soff+(sizeof(ArPMT)*i)))->~G__TArPMT();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ArPMT*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ArPMT*) (soff))->~G__TArPMT();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ArDictionary_762_0_115(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ArPMT* dest = (ArPMT*) G__getstructoffset();
   *dest = *(ArPMT*) libp->para[0].ref;
   const ArPMT& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ArRun */
static int G__ArDictionary_767_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ArRun* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ArRun[n];
     } else {
       p = new((void*) gvp) ArRun[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ArRun;
     } else {
       p = new((void*) gvp) ArRun;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ArDictionaryLN_ArRun));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_767_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ArRun* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ArRun((const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ArRun((const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ArDictionaryLN_ArRun));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_767_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ArRun*) G__getstructoffset())->RunNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_767_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ArRun*) G__getstructoffset())->FileNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_767_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ArRun*) G__getstructoffset())->EventNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_767_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((ArRun*) G__getstructoffset())->unixTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_767_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ArRun*) G__getstructoffset())->NPMTs());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_767_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 72, (long) ((ArRun*) G__getstructoffset())->TTT());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_767_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ArRun*) G__getstructoffset())->Delay((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_767_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ArRun*) G__getstructoffset())->NumberOfSamples());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_767_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((ArRun*) G__getstructoffset())->GetPMT((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_767_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((ArRun*) G__getstructoffset())->GetVPMT());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_767_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ArRun*) G__getstructoffset())->TotalNumberOfFiles());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_767_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ArRun*) G__getstructoffset())->NumberOfEventsInFile());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_767_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ArRun*) G__getstructoffset())->CurrentFileNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_767_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ArRun*) G__getstructoffset())->CurrentEventNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_767_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ArRun*) G__getstructoffset())->NSamples());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_767_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ArRun*) G__getstructoffset())->LoadEvent((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_767_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ArRun*) G__getstructoffset())->LoadEvent((Long64_t) G__Longlong(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_767_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArRun*) G__getstructoffset())->LoadConfig();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_767_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArRun*) G__getstructoffset())->Reset();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_767_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArRun*) G__getstructoffset())->BeginningOfEvent();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_767_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((ArRun*) G__getstructoffset())->AddPMT());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_767_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ArRun::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_767_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ArRun::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_767_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ArRun::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_767_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ArRun::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_767_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArRun*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_767_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ArRun::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_767_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ArRun::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_767_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ArRun::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_767_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ArRun::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ArDictionary_767_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ArRun* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ArRun(*(ArRun*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ArDictionaryLN_ArRun));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ArRun G__TArRun;
static int G__ArDictionary_767_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ArRun*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ArRun*) (soff+(sizeof(ArRun)*i)))->~G__TArRun();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ArRun*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ArRun*) (soff))->~G__TArRun();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ArDictionary_767_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ArRun* dest = (ArRun*) G__getstructoffset();
   *dest = *(ArRun*) libp->para[0].ref;
   const ArRun& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ArAnalysis */
static int G__ArDictionary_789_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ArAnalysis* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ArAnalysis[n];
     } else {
       p = new((void*) gvp) ArAnalysis[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ArAnalysis;
     } else {
       p = new((void*) gvp) ArAnalysis;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ArDictionaryLN_ArAnalysis));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_789_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArAnalysis*) G__getstructoffset())->Reset();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_789_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((ArAnalysis*) G__getstructoffset())->Run());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_789_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((ArAnalysis*) G__getstructoffset())->MeanRun());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_789_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArAnalysis*) G__getstructoffset())->SetRun((ArRun*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_789_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArAnalysis*) G__getstructoffset())->ApplyConfiguration();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_789_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArAnalysis*) G__getstructoffset())->ConvertData();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_789_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArAnalysis*) G__getstructoffset())->CorrectData();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_789_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArAnalysis*) G__getstructoffset())->FindPedestal();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_789_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArAnalysis*) G__getstructoffset())->FindSignal();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_789_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArAnalysis*) G__getstructoffset())->SetFakeSignal((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_789_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArAnalysis*) G__getstructoffset())->FindSignalWithOfflineTrigger((Double_t) G__double(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_789_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArAnalysis*) G__getstructoffset())->EvaluateIntegral();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_789_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArAnalysis*) G__getstructoffset())->FillVirtualChannel();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_789_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArAnalysis*) G__getstructoffset())->ShiftVirtualChannel((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_789_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArAnalysis*) G__getstructoffset())->AnalyseVirtualChannel();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_789_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArAnalysis*) G__getstructoffset())->EvaluateChannelsFromVirtualChannel();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_789_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArAnalysis*) G__getstructoffset())->FilterBackground();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_789_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArAnalysis*) G__getstructoffset())->SetMeanTrace((ArRun*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_789_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArAnalysis*) G__getstructoffset())->ResetMeanTrace();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_789_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArAnalysis*) G__getstructoffset())->FillMeanTrace();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_789_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArAnalysis*) G__getstructoffset())->ScaleMeanTrace((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_789_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((ArAnalysis*) G__getstructoffset())->PrintMeanTrace((FILE*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((ArAnalysis*) G__getstructoffset())->PrintMeanTrace();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_789_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ArAnalysis*) G__getstructoffset())->Triggered());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_789_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArAnalysis*) G__getstructoffset())->SetTriggered((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_789_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((ArAnalysis*) G__getstructoffset())->Print((FILE*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((ArAnalysis*) G__getstructoffset())->Print();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_789_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArAnalysis*) G__getstructoffset())->ClearHistograms();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_789_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ArAnalysis::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_789_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ArAnalysis::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_789_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ArAnalysis::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_789_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ArAnalysis::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_789_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArAnalysis*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_789_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ArAnalysis::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_789_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ArAnalysis::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_789_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ArAnalysis::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_789_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ArAnalysis::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ArDictionary_789_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ArAnalysis* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ArAnalysis(*(ArAnalysis*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ArDictionaryLN_ArAnalysis));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ArAnalysis G__TArAnalysis;
static int G__ArDictionary_789_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ArAnalysis*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ArAnalysis*) (soff+(sizeof(ArAnalysis)*i)))->~G__TArAnalysis();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ArAnalysis*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ArAnalysis*) (soff))->~G__TArAnalysis();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ArDictionary_789_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ArAnalysis* dest = (ArAnalysis*) G__getstructoffset();
   *dest = *(ArAnalysis*) libp->para[0].ref;
   const ArAnalysis& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ArDisplay */
static int G__ArDictionary_795_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ArDisplay* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 5
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ArDisplay(
(TGWindow*) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]), (ArAnalysis*) G__int(libp->para[3])
, (ArRun*) G__int(libp->para[4]));
   } else {
     p = new((void*) gvp) ArDisplay(
(TGWindow*) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]), (ArAnalysis*) G__int(libp->para[3])
, (ArRun*) G__int(libp->para[4]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ArDictionaryLN_ArDisplay));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_795_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArDisplay*) G__getstructoffset())->Initialize();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_795_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArDisplay*) G__getstructoffset())->Process();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_795_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArDisplay*) G__getstructoffset())->LoadEvent();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_795_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArDisplay*) G__getstructoffset())->NextEvent();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_795_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArDisplay*) G__getstructoffset())->PreviousEvent();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_795_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArDisplay*) G__getstructoffset())->AnalyseEvent();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_795_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArDisplay*) G__getstructoffset())->CleanGraphs();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_795_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArDisplay*) G__getstructoffset())->DisplayEvent();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_795_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArDisplay*) G__getstructoffset())->RedisplayEvent();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_795_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArDisplay*) G__getstructoffset())->DisplayTraceAll();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_795_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArDisplay*) G__getstructoffset())->DisplayTraceSum();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_795_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArDisplay*) G__getstructoffset())->DisplayPlotsPeakTime();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_795_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArDisplay*) G__getstructoffset())->DisplayPlotsCRvsIntegral();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_795_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArDisplay*) G__getstructoffset())->DisplayPlotsPedestal();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_795_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ArDisplay::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_795_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ArDisplay::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_795_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ArDisplay::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_795_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ArDisplay::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_795_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArDisplay*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_795_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ArDisplay::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_795_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ArDisplay::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_795_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ArDisplay::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_795_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ArDisplay::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ArDisplay G__TArDisplay;
static int G__ArDictionary_795_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ArDisplay*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ArDisplay*) (soff+(sizeof(ArDisplay)*i)))->~G__TArDisplay();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ArDisplay*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ArDisplay*) (soff))->~G__TArDisplay();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ArRecoPMT */
static int G__ArDictionary_796_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ArRecoPMT* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ArRecoPMT[n];
     } else {
       p = new((void*) gvp) ArRecoPMT[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ArRecoPMT;
     } else {
       p = new((void*) gvp) ArRecoPMT;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ArDictionaryLN_ArRecoPMT));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_796_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ArRecoPMT* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ArRecoPMT((ArPMT*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) ArRecoPMT((ArPMT*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ArDictionaryLN_ArRecoPMT));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_796_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArRecoPMT*) G__getstructoffset())->Reset();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_796_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ArRecoPMT*) G__getstructoffset())->ID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_796_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = ((ArRecoPMT*) G__getstructoffset())->Name();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_796_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = ((ArRecoPMT*) G__getstructoffset())->Type();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_796_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ArRecoPMT*) G__getstructoffset())->PedTimeMin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_796_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ArRecoPMT*) G__getstructoffset())->PedTimeMax());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_796_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ArRecoPMT*) G__getstructoffset())->PedMin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_796_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ArRecoPMT*) G__getstructoffset())->PedMax());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_796_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ArRecoPMT*) G__getstructoffset())->PedMean());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_796_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ArRecoPMT*) G__getstructoffset())->PedSigma());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_796_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ArRecoPMT*) G__getstructoffset())->PedChi2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_796_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ArRecoPMT*) G__getstructoffset())->PedNpe());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_796_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ArRecoPMT*) G__getstructoffset())->PedIntegral());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_796_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ArRecoPMT*) G__getstructoffset())->PedIntegralPe());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_796_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ArRecoPMT*) G__getstructoffset())->PedTimePe());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_796_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ArRecoPMT*) G__getstructoffset())->PeakTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_796_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ArRecoPMT*) G__getstructoffset())->PeakValue());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_796_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ArRecoPMT*) G__getstructoffset())->PeakIsSaturated());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_796_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ArRecoPMT*) G__getstructoffset())->NPeaks());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_796_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ArRecoPMT*) G__getstructoffset())->Npe());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_796_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ArRecoPMT*) G__getstructoffset())->Integral());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_796_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<int>* pobj;
         vector<int> xobj = ((ArRecoPMT*) G__getstructoffset())->PeakTimes();
         pobj = new vector<int>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_796_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((ArRecoPMT*) G__getstructoffset())->PeakIntegral();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_796_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((ArRecoPMT*) G__getstructoffset())->PeakAmplitude();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_796_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ArRecoPMT*) G__getstructoffset())->IntegralPe());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_796_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ArRecoPMT*) G__getstructoffset())->IntegralPeS());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_796_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ArRecoPMT*) G__getstructoffset())->TimePe());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_796_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ArRecoPMT*) G__getstructoffset())->IntegralSinglet0());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_796_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ArRecoPMT*) G__getstructoffset())->IntegralSinglet1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_796_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ArRecoPMT*) G__getstructoffset())->CR());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_796_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ArRecoPMT*) G__getstructoffset())->CRPe());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_796_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ArRecoPMT*) G__getstructoffset())->CRPeS());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_796_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArRecoPMT*) G__getstructoffset())->SetID((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_796_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArRecoPMT*) G__getstructoffset())->SetName(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_796_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArRecoPMT*) G__getstructoffset())->SetType(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_796_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArRecoPMT*) G__getstructoffset())->SetPedTimeMin((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_796_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArRecoPMT*) G__getstructoffset())->SetPedTimeMax((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_796_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArRecoPMT*) G__getstructoffset())->SetPedMin((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_796_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArRecoPMT*) G__getstructoffset())->SetPedMax((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_796_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArRecoPMT*) G__getstructoffset())->SetPedMean((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_796_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArRecoPMT*) G__getstructoffset())->SetPedSigma((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_796_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArRecoPMT*) G__getstructoffset())->SetPedChi2((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_796_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArRecoPMT*) G__getstructoffset())->SetPedNpe((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_796_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArRecoPMT*) G__getstructoffset())->SetPedIntegral((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_796_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArRecoPMT*) G__getstructoffset())->SetPedIntegralPe((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_796_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArRecoPMT*) G__getstructoffset())->SetPedTimePe((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_796_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArRecoPMT*) G__getstructoffset())->SetPeakTime((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_796_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArRecoPMT*) G__getstructoffset())->SetPeakValue((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_796_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArRecoPMT*) G__getstructoffset())->SetPeakIsSaturated((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_796_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArRecoPMT*) G__getstructoffset())->SetNPeaks((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_796_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArRecoPMT*) G__getstructoffset())->SetNpe((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_796_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArRecoPMT*) G__getstructoffset())->SetIntegral((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_796_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArRecoPMT*) G__getstructoffset())->SetIntegralPe((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_796_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArRecoPMT*) G__getstructoffset())->SetIntegralPeS((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_796_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArRecoPMT*) G__getstructoffset())->SetTimePe((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_796_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArRecoPMT*) G__getstructoffset())->SetIntegralSinglet0((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_796_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArRecoPMT*) G__getstructoffset())->SetIntegralSinglet1((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_796_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArRecoPMT*) G__getstructoffset())->SetCR((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_796_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArRecoPMT*) G__getstructoffset())->SetCRPe((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_796_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArRecoPMT*) G__getstructoffset())->SetCRPeS((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_796_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((ArRecoPMT*) G__getstructoffset())->Print((FILE*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((ArRecoPMT*) G__getstructoffset())->Print();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_796_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArRecoPMT*) G__getstructoffset())->Import((ArPMT*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_796_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ArRecoPMT::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_796_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ArRecoPMT::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_796_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ArRecoPMT::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_796_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ArRecoPMT::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_796_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArRecoPMT*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_796_0_73(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ArRecoPMT::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_796_0_74(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ArRecoPMT::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_796_0_75(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ArRecoPMT::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_796_0_76(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ArRecoPMT::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ArDictionary_796_0_77(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ArRecoPMT* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ArRecoPMT(*(ArRecoPMT*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ArDictionaryLN_ArRecoPMT));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ArRecoPMT G__TArRecoPMT;
static int G__ArDictionary_796_0_78(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ArRecoPMT*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ArRecoPMT*) (soff+(sizeof(ArRecoPMT)*i)))->~G__TArRecoPMT();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ArRecoPMT*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ArRecoPMT*) (soff))->~G__TArRecoPMT();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ArDictionary_796_0_79(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ArRecoPMT* dest = (ArRecoPMT*) G__getstructoffset();
   *dest = *(ArRecoPMT*) libp->para[0].ref;
   const ArRecoPMT& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ArOutput */
static int G__ArDictionary_797_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ArOutput* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ArOutput((const char*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) ArOutput((const char*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ArDictionaryLN_ArOutput));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_797_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ArOutput*) G__getstructoffset())->Open());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_797_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ArOutput*) G__getstructoffset())->Cd());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_797_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ArOutput*) G__getstructoffset())->FillData((ArRun*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_797_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ArOutput*) G__getstructoffset())->FillMeanTrace((ArAnalysis*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_797_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ArOutput*) G__getstructoffset())->Close());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_797_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ArOutput::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_797_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ArOutput::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_797_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ArOutput::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_797_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ArOutput::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_797_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ArOutput*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_797_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ArOutput::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_797_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ArOutput::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_797_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ArOutput::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ArDictionary_797_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ArOutput::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ArDictionary_797_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ArOutput* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ArOutput(*(ArOutput*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ArDictionaryLN_ArOutput));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ArOutput G__TArOutput;
static int G__ArDictionary_797_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ArOutput*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ArOutput*) (soff+(sizeof(ArOutput)*i)))->~G__TArOutput();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ArOutput*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ArOutput*) (soff))->~G__TArOutput();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ArDictionary_797_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ArOutput* dest = (ArOutput*) G__getstructoffset();
   *dest = *(ArOutput*) libp->para[0].ref;
   const ArOutput& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* ArDetector */

/* ArConfiguration */

/* ArIO */

/* ArPMT */

/* ArRun */

/* ArAnalysis */

/* ArDisplay */

/* ArRecoPMT */

/* ArOutput */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncArDictionary {
 public:
  G__Sizep2memfuncArDictionary(): p(&G__Sizep2memfuncArDictionary::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncArDictionary::*p)();
};

size_t G__get_sizep2memfuncArDictionary()
{
  G__Sizep2memfuncArDictionary a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceArDictionary() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__ArDictionaryLN_ArDetector))) {
     ArDetector *G__Lderived;
     G__Lderived=(ArDetector*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ArDictionaryLN_ArDetector),G__get_linked_tagnum(&G__ArDictionaryLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__ArDictionaryLN_ArConfiguration))) {
     ArConfiguration *G__Lderived;
     G__Lderived=(ArConfiguration*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ArDictionaryLN_ArConfiguration),G__get_linked_tagnum(&G__ArDictionaryLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__ArDictionaryLN_ArIO))) {
     ArIO *G__Lderived;
     G__Lderived=(ArIO*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ArDictionaryLN_ArIO),G__get_linked_tagnum(&G__ArDictionaryLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__ArDictionaryLN_ArPMT))) {
     ArPMT *G__Lderived;
     G__Lderived=(ArPMT*)0x1000;
     {
       ArDetector *G__Lpbase=(ArDetector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ArDictionaryLN_ArPMT),G__get_linked_tagnum(&G__ArDictionaryLN_ArDetector),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ArDictionaryLN_ArPMT),G__get_linked_tagnum(&G__ArDictionaryLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__ArDictionaryLN_ArRun))) {
     ArRun *G__Lderived;
     G__Lderived=(ArRun*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ArDictionaryLN_ArRun),G__get_linked_tagnum(&G__ArDictionaryLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__ArDictionaryLN_ArAnalysis))) {
     ArAnalysis *G__Lderived;
     G__Lderived=(ArAnalysis*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ArDictionaryLN_ArAnalysis),G__get_linked_tagnum(&G__ArDictionaryLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__ArDictionaryLN_ArDisplay))) {
     ArDisplay *G__Lderived;
     G__Lderived=(ArDisplay*)0x1000;
     {
       TGMainFrame *G__Lpbase=(TGMainFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ArDictionaryLN_ArDisplay),G__get_linked_tagnum(&G__ArDictionaryLN_TGMainFrame),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGCompositeFrame *G__Lpbase=(TGCompositeFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ArDictionaryLN_ArDisplay),G__get_linked_tagnum(&G__ArDictionaryLN_TGCompositeFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGFrame *G__Lpbase=(TGFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ArDictionaryLN_ArDisplay),G__get_linked_tagnum(&G__ArDictionaryLN_TGFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWindow *G__Lpbase=(TGWindow*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ArDictionaryLN_ArDisplay),G__get_linked_tagnum(&G__ArDictionaryLN_TGWindow),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGObject *G__Lpbase=(TGObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ArDictionaryLN_ArDisplay),G__get_linked_tagnum(&G__ArDictionaryLN_TGObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ArDictionaryLN_ArDisplay),G__get_linked_tagnum(&G__ArDictionaryLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ArDictionaryLN_ArDisplay),G__get_linked_tagnum(&G__ArDictionaryLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__ArDictionaryLN_ArRecoPMT))) {
     ArRecoPMT *G__Lderived;
     G__Lderived=(ArRecoPMT*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ArDictionaryLN_ArRecoPMT),G__get_linked_tagnum(&G__ArDictionaryLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__ArDictionaryLN_ArOutput))) {
     ArOutput *G__Lderived;
     G__Lderived=(ArOutput*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ArDictionaryLN_ArOutput),G__get_linked_tagnum(&G__ArDictionaryLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableArDictionary() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("UInt_t",104,-1,0,-1);
   G__setnewtype(-1,"Unsigned integer 4 bytes (unsigned int)",0);
   G__search_typename2("Long_t",108,-1,0,-1);
   G__setnewtype(-1,"Signed long integer 4 bytes (long)",0);
   G__search_typename2("Float_t",102,-1,0,-1);
   G__setnewtype(-1,"Float 4 bytes (float)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("Long64_t",110,-1,0,-1);
   G__setnewtype(-1,"Portable signed long integer 8 bytes",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__ArDictionaryLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__ArDictionaryLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ArDictionaryLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__ArDictionaryLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ArDictionaryLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__ArDictionaryLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__ArDictionaryLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ArDictionaryLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__ArDictionaryLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ArDictionaryLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__ArDictionaryLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__ArDictionaryLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__ArDictionaryLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__ArDictionaryLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__ArDictionaryLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<UInt_t,Int_t>",117,G__get_linked_tagnum(&G__ArDictionaryLN_pairlEunsignedsPintcOintgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::pair<UInt_t,Int_t> >",117,G__get_linked_tagnum(&G__ArDictionaryLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<UInt_t,Int_t> >",117,G__get_linked_tagnum(&G__ArDictionaryLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__ArDictionaryLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ArDictionaryLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__ArDictionaryLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ArDictionaryLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<unsigned int,int> >",117,G__get_linked_tagnum(&G__ArDictionaryLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__ArDictionaryLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__ArDictionaryLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__ArDictionaryLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__ArDictionaryLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__ArDictionaryLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__ArDictionaryLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__ArDictionaryLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__ArDictionaryLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int>",117,G__get_linked_tagnum(&G__ArDictionaryLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__ArDictionaryLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ArDictionaryLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__ArDictionaryLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ArDictionaryLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("uint32_t",104,-1,0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::string>",117,G__get_linked_tagnum(&G__ArDictionaryLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<string>",117,G__get_linked_tagnum(&G__ArDictionaryLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__ArDictionaryLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ArDictionaryLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__ArDictionaryLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ArDictionaryLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<string>",117,G__get_linked_tagnum(&G__ArDictionaryLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<tIndexItem>",117,G__get_linked_tagnum(&G__ArDictionaryLN_vectorlEINDEXITEMcOallocatorlEINDEXITEMgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__ArDictionaryLN_reverse_iteratorlEvectorlEINDEXITEMcOallocatorlEINDEXITEMgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ArDictionaryLN_vectorlEINDEXITEMcOallocatorlEINDEXITEMgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__ArDictionaryLN_reverse_iteratorlEvectorlEINDEXITEMcOallocatorlEINDEXITEMgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ArDictionaryLN_vectorlEINDEXITEMcOallocatorlEINDEXITEMgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<INDEXITEM>",117,G__get_linked_tagnum(&G__ArDictionaryLN_vectorlEINDEXITEMcOallocatorlEINDEXITEMgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* ArDetector */
static void G__setup_memvarArDetector(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ArDictionaryLN_ArDetector));
   { ArDetector *p; p=(ArDetector*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"eID=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ArDictionaryLN_TString),-1,-1,2,"eName=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ArDictionaryLN_TString),-1,-1,2,"eType=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->RawData)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ArDictionaryLN_TArrayS),-1,-1,1,"RawData=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Data)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ArDictionaryLN_TArrayD),-1,-1,1,"Data=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ArDictionaryLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ArConfiguration */
static void G__setup_memvarArConfiguration(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ArDictionaryLN_ArConfiguration));
   { ArConfiguration *p; p=(ArConfiguration*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->ePath)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ArDictionaryLN_TString),-1,-1,1,"ePath=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->eRunNumber)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"eRunNumber=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->eCurrentFileName)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ArDictionaryLN_TString),-1,-1,1,"eCurrentFileName=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->BitResolution)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"BitResolution=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->SampleSize)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"SampleSize=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EventsInTheMask)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"EventsInTheMask=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->FileNumber)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"FileNumber=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->FirstEvent)-(long)(p)),110,0,0,-1,G__defined_typename("Long64_t"),-1,1,"FirstEvent=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->LastEvent)-(long)(p)),110,0,0,-1,G__defined_typename("Long64_t"),-1,1,"LastEvent=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EventsMaskFile)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ArDictionaryLN_TString),-1,-1,1,"EventsMaskFile=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->FileList)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ArDictionaryLN_TArrayI),-1,-1,1,"FileList=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EventList)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ArDictionaryLN_TArrayI),-1,-1,1,"EventList=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->CalibrationFile)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ArDictionaryLN_TString),-1,-1,1,"CalibrationFile=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Calibration)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ArDictionaryLN_TArrayD),-1,-1,1,"Calibration=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Delay)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ArDictionaryLN_TArrayI),-1,-1,1,"Delay=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ApplyDelayCorrectionFromDAQInfo)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"ApplyDelayCorrectionFromDAQInfo=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EvaluateChannelsFromVirtualChannel)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"EvaluateChannelsFromVirtualChannel=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->FakeSignalTime)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"FakeSignalTime=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->SingletIntegrationTime)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"SingletIntegrationTime=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PedPeakFindingTimeMargin)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"PedPeakFindingTimeMargin=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PeakFindingTimeMargin)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"PeakFindingTimeMargin=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PedPeakFindingDisentangleTime)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"PedPeakFindingDisentangleTime=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PeakFindingDisentangleTime)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"PeakFindingDisentangleTime=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PedPeakFindingSigmaThreshold)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"PedPeakFindingSigmaThreshold=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PeakFindingSigmaThreshold)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"PeakFindingSigmaThreshold=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Pedestal)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ArDictionaryLN_TArrayD),-1,-1,1,"Pedestal=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->VirtualChannelMask)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"VirtualChannelMask=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->VirtualChannelMaskList)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ArDictionaryLN_TArrayI),-1,-1,1,"VirtualChannelMaskList=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->StartPedestal)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"StartPedestal=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->StopPedestal)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"StopPedestal=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->StartPeakSignal)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"StartPeakSignal=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->StopPeakSignal)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"StopPeakSignal=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ReferenceConversionFactor)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"ReferenceConversionFactor=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->MaximumIntegrationTime)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"MaximumIntegrationTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ArDictionaryLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ArIO */
static void G__setup_memvarArIO(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ArDictionaryLN_ArIO));
   { ArIO *p; p=(ArIO*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ArDictionaryLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ArPMT */
static void G__setup_memvarArPMT(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ArDictionaryLN_ArPMT));
   { ArPMT *p; p=(ArPMT*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"eFullScale=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"eOffset=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,G__defined_typename("Long_t"),-1,4,"eCoupling=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,G__defined_typename("Long_t"),-1,4,"eBandWidth=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eDiscThrs=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"ePeakFraction=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"eCalibration=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eDelay=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"ePedestal=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"ePedTimeMin=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"ePedTimeMax=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"ePedMin=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"ePedMax=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"ePedMean=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"ePedSigma=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"ePedChi2=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"ePedNpe=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"ePedIntegral=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"ePedIntegralPe=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"ePedTimePe=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"ePeakStartTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"ePeakTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"ePeakValue=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"ePeakIsSaturated=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eNpe=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"eIntegral=",0,"Integrating everything");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"eIntegralPe=",0,"Integrating only around peaks");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"eIntegralPeS=",0,"Integrating only around peaks of single channels (meaningfull only for VPMT)");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"eTimePe=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"eIntegralSinglet0=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"eIntegralSinglet1=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"eCR=",0,"CR based on eIntegral");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"eCRPe=",0,"CR based on eIntegralPe");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"eCRPeS=",0,"CR based on eIntegralPeS (meaningfull only for VPMT)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ArDictionaryLN_TBranch),-1,-1,4,"eBranch=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ArDictionaryLN_TTree),-1,-1,4,"eTree=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ArDictionaryLN_TH1F),-1,-1,4,"hPedestal=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ArDictionaryLN_TF1),-1,-1,4,"fMyGaus=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ePeakTimes)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ArDictionaryLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"ePeakTimes=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ePeakIntegral)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ArDictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"ePeakIntegral=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ePeakAmplitude)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ArDictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"ePeakAmplitude=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->eSumPeakIntegralPMT)-(long)(p)),100,0,0,-1,-1,-1,1,"eSumPeakIntegralPMT=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->RawData)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ArDictionaryLN_TArrayS),-1,-1,1,"RawData=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Data)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ArDictionaryLN_TArrayD),-1,-1,1,"Data=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->DataError)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ArDictionaryLN_TArrayD),-1,-1,1,"DataError=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->eNPeaks)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"eNPeaks=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Peaks)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ArDictionaryLN_TArrayI),-1,-1,1,"Peaks=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ArDictionaryLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ArRun */
static void G__setup_memvarArRun(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ArDictionaryLN_ArRun));
   { ArRun *p; p=(ArRun*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ArDictionaryLN_TString),-1,-1,4,"ePath=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eRunNumber=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eFileNumber=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eEventNumber=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"eUnixTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eNPMTs=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("uint32_t"),-1,4,"eTTT[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eDelay[24]=",0,"delay of each pmt. trigger channels are not interesting --> ignore them !");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eNumberOfSamples=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eTotalNumberOfFiles=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eNumberOfEventsInFile=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ArDictionaryLN_TClonesArray),-1,-1,4,"ePMTs=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ArDictionaryLN_ArPMT),-1,-1,4,"eVPMT=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->eData)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ArDictionaryLN_ArDMData),-1,-1,1,"eData=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->eBoardEventNumber)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"eBoardEventNumber[4]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->eSumPeakIntegralTop)-(long)(p)),100,0,0,-1,-1,-1,1,"eSumPeakIntegralTop=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->eSumPeakIntegralBottom)-(long)(p)),100,0,0,-1,-1,-1,1,"eSumPeakIntegralBottom=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ArDictionaryLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ArAnalysis */
static void G__setup_memvarArAnalysis(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ArDictionaryLN_ArAnalysis));
   { ArAnalysis *p; p=(ArAnalysis*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eEventsToRead=",0,"-1 means all available events");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eSamplesToRead=",0,"-1 means all available samples");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eChannelsToRead=",0,"-1 means all available channels TO CHECK!");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eEdge=",0,"Delay of the trigger");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eIntTime=",0,"Integration time");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"eNoiseCut=",0,"Noise rejection in terms of sigma");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eTriggered=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ArDictionaryLN_ArRun),-1,-1,4,"eRun=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ArDictionaryLN_ArRun),-1,-1,4,"eMeanRun=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ArDictionaryLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ArDisplay */
static void G__setup_memvarArDisplay(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ArDictionaryLN_ArDisplay));
   { ArDisplay *p; p=(ArDisplay*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ArDictionaryLN_TRootEmbeddedCanvas),-1,-1,4,"fEcanvas=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ArDictionaryLN_TGStatusBar),-1,-1,4,"fStatusBar=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ArDictionaryLN_ArAnalysis),-1,-1,4,"fAnalysis=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ArDictionaryLN_ArRun),-1,-1,4,"fRun=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ArDictionaryLN_TGNumberEntry),-1,-1,4,"fEventNumber=",0,(char*)NULL);
   G__memvar_setup((void*)0,110,0,0,-1,G__defined_typename("Long64_t"),-1,4,"EventNumber=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ArDictionaryLN_TGCheckButton),-1,-1,4,"fTextButtonAutomaticView=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ArDictionaryLN_TCanvas),-1,-1,4,"cTraceAll=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ArDictionaryLN_TCanvas),-1,-1,4,"cTraceSum=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ArDictionaryLN_TCanvas),-1,-1,4,"cPlotsPeakTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ArDictionaryLN_TCanvas),-1,-1,4,"cPlotsCRvsIntegral=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ArDictionaryLN_TCanvas),-1,-1,4,"cPlotsPedestal=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ArDictionaryLN_TClonesArray),-1,-1,4,"graph=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ArDictionaryLN_TClonesArray),-1,-1,4,"frame=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ArDictionaryLN_TClonesArray),-1,-1,4,"hPeakTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ArDictionaryLN_TClonesArray),-1,-1,4,"hCRvsIntegral=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ArDictionaryLN_TClonesArray),-1,-1,4,"hPedestal=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ArDictionaryLN_TArrayD),-1,-1,4,"Time=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ArDictionaryLN_TClonesArray),-1,-1,4,"ped_line=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ArDictionaryLN_TClonesArray),-1,-1,4,"peaktime_line=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ArDictionaryLN_TClonesArray),-1,-1,4,"peakstarttime_line=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ArDictionaryLN_TClonesArray),-1,-1,4,"pedtime_line=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ArDictionaryLN_TClonesArray),-1,-1,4,"analysis_text=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"margin=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ArDictionaryLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ArRecoPMT */
static void G__setup_memvarArRecoPMT(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ArDictionaryLN_ArRecoPMT));
   { ArRecoPMT *p; p=(ArRecoPMT*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eID=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ArDictionaryLN_TString),-1,-1,4,"eName=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ArDictionaryLN_TString),-1,-1,4,"eType=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"eCalibration=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eDelay=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"ePedestal=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"ePedTimeMin=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"ePedTimeMax=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"ePedMin=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"ePedMax=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"ePedMean=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"ePedSigma=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"ePedChi2=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"ePedNpe=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"ePedIntegral=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"ePedIntegralPe=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"ePedTimePe=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"ePeakStartTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"ePeakTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"ePeakValue=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"ePeakIsSaturated=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eNPeaks=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eNpe=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"eIntegral=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"eIntegralPe=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"eIntegralPeS=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"eTimePe=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"eIntegralSinglet0=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"eIntegralSinglet1=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"eCR=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"eCRPe=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"eCRPeS=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ePeakTimes)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ArDictionaryLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"ePeakTimes=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ePeakIntegral)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ArDictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"ePeakIntegral=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ePeakAmplitude)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ArDictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"ePeakAmplitude=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->eSumPeakIntegralPMT)-(long)(p)),100,0,0,-1,-1,-1,1,"eSumPeakIntegralPMT=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ArDictionaryLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ArOutput */
static void G__setup_memvarArOutput(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ArDictionaryLN_ArOutput));
   { ArOutput *p; p=(ArOutput*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ArDictionaryLN_TString),-1,-1,4,"eFileName=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ArDictionaryLN_TFile),-1,-1,4,"eFile=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ArDictionaryLN_TTree),-1,-1,4,"eTreeData=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ArDictionaryLN_TTree),-1,-1,4,"eTreeMeanTrace=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eRunNumber=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eEventNumber=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eBoardEventNumber[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eNPMTs=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("uint32_t"),-1,4,"eTTT[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eNSamples=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ArDictionaryLN_TClonesArray),-1,-1,4,"eRecoPMTs=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ArDictionaryLN_ArRecoPMT),-1,-1,4,"eRecoVPMT=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"ePMT=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"eData=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"eDataError=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"eUnixTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"eSumPeakIntegralTop=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"eSumPeakIntegralBottom=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"eSumPeakIntegralTotal=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ArDictionaryLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarArDictionary() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncArDetector(void) {
   /* ArDetector */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ArDictionaryLN_ArDetector));
   G__memfunc_setup("ArDetector",1005,G__ArDictionary_759_0_1, 105, G__get_linked_tagnum(&G__ArDictionaryLN_ArDetector), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ID",141,G__ArDictionary_759_0_2, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Name",385,G__ArDictionary_759_0_3, 117, G__get_linked_tagnum(&G__ArDictionaryLN_TString), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Type",418,G__ArDictionary_759_0_4, 117, G__get_linked_tagnum(&G__ArDictionaryLN_TString), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetID",441,G__ArDictionary_759_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetName",685,G__ArDictionary_759_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetType",718,G__ArDictionary_759_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__ArDictionary_759_0_8, 85, G__get_linked_tagnum(&G__ArDictionaryLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ArDetector::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__ArDictionary_759_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ArDetector::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__ArDictionary_759_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ArDetector::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__ArDictionary_759_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ArDetector::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__ArDictionaryLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ArDictionary_759_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__ArDictionary_759_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ArDetector::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__ArDictionary_759_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ArDetector::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__ArDictionary_759_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ArDetector::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__ArDictionary_759_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ArDetector::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("ArDetector", 1005, G__ArDictionary_759_0_20, (int) ('i'), G__get_linked_tagnum(&G__ArDictionaryLN_ArDetector), -1, 0, 1, 1, 1, 0, "u 'ArDetector' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ArDetector", 1131, G__ArDictionary_759_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ArDictionary_759_0_22, (int) ('u'), G__get_linked_tagnum(&G__ArDictionaryLN_ArDetector), -1, 1, 1, 1, 1, 0, "u 'ArDetector' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncArConfiguration(void) {
   /* ArConfiguration */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ArDictionaryLN_ArConfiguration));
   G__memfunc_setup("ArConfiguration",1547,G__ArDictionary_760_0_1, 105, G__get_linked_tagnum(&G__ArDictionaryLN_ArConfiguration), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ArConfiguration",1547,G__ArDictionary_760_0_2, 105, G__get_linked_tagnum(&G__ArDictionaryLN_ArConfiguration), -1, 0, 2, 1, 1, 0, 
"C - - 10 - path i - 'Int_t' 0 - runnumber", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Reset",515,G__ArDictionary_760_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Path",397,G__ArDictionary_760_0_4, 117, G__get_linked_tagnum(&G__ArDictionaryLN_TString), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RunNumber",926,G__ArDictionary_760_0_5, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPath",697,G__ArDictionary_760_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - path", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRunNumber",1226,G__ArDictionary_760_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__ArDictionary_760_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "E - - 0 'stdout' fp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Load",384,G__ArDictionary_760_0_9, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadMask",776,G__ArDictionary_760_0_10, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'basic_ifstream<char,char_traits<char> >' 'ifstream' 1 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadEventsMaskFile",1793,G__ArDictionary_760_0_11, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintMask",921,G__ArDictionary_760_0_12, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadCalibration",1508,G__ArDictionary_760_0_13, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'basic_ifstream<char,char_traits<char> >' 'ifstream' 1 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadDelay",875,G__ArDictionary_760_0_14, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'basic_ifstream<char,char_traits<char> >' 'ifstream' 1 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadPedestal",1198,G__ArDictionary_760_0_15, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'basic_ifstream<char,char_traits<char> >' 'ifstream' 1 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadVirtualChannelMask",2216,G__ArDictionary_760_0_16, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'basic_ifstream<char,char_traits<char> >' 'ifstream' 1 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__ArDictionary_760_0_17, 85, G__get_linked_tagnum(&G__ArDictionaryLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ArConfiguration::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__ArDictionary_760_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ArConfiguration::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__ArDictionary_760_0_19, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ArConfiguration::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__ArDictionary_760_0_20, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ArConfiguration::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__ArDictionaryLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ArDictionary_760_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__ArDictionary_760_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ArConfiguration::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__ArDictionary_760_0_26, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ArConfiguration::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__ArDictionary_760_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ArConfiguration::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__ArDictionary_760_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ArConfiguration::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("ArConfiguration", 1547, G__ArDictionary_760_0_29, (int) ('i'), G__get_linked_tagnum(&G__ArDictionaryLN_ArConfiguration), -1, 0, 1, 1, 1, 0, "u 'ArConfiguration' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ArConfiguration", 1673, G__ArDictionary_760_0_30, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ArDictionary_760_0_31, (int) ('u'), G__get_linked_tagnum(&G__ArDictionaryLN_ArConfiguration), -1, 1, 1, 1, 1, 0, "u 'ArConfiguration' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncArIO(void) {
   /* ArIO */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ArDictionaryLN_ArIO));
   G__memfunc_setup("ArIO",331,G__ArDictionary_761_0_1, 105, G__get_linked_tagnum(&G__ArDictionaryLN_ArIO), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("i2s",270,G__ArDictionary_761_0_2, 117, G__get_linked_tagnum(&G__ArDictionaryLN_TString), -1, 0, 1, 3, 1, 0, "i - - 0 - run", (char*)NULL, (void*) G__func2void( (TString (*)(int))(&ArIO::i2s) ), 0);
   G__memfunc_setup("r2s",279,G__ArDictionary_761_0_3, 117, G__get_linked_tagnum(&G__ArDictionaryLN_TString), -1, 0, 1, 3, 1, 0, "i - - 0 - run", (char*)NULL, (void*) G__func2void( (TString (*)(int))(&ArIO::r2s) ), 0);
   G__memfunc_setup("MakeFileName",1151,G__ArDictionary_761_0_4, 121, -1, -1, 0, 5, 3, 1, 0, 
"u 'TString' - 1 - s C - - 10 - path "
"i - 'Int_t' 0 - runnumber i - 'Int_t' 0 - filenumber "
"C - - 10 - suffix", (char*)NULL, (void*) G__func2void( (void (*)(TString&, const char*, Int_t, Int_t, const char*))(&ArIO::MakeFileName) ), 0);
   G__memfunc_setup("PrintColor",1036,G__ArDictionary_761_0_5, 121, -1, -1, 0, 2, 3, 1, 0, 
"E - - 0 - fp C - - 10 - phrase", (char*)NULL, (void*) G__func2void( (void (*)(FILE*, const char*))(&ArIO::PrintColor) ), 0);
   G__memfunc_setup("Class",502,G__ArDictionary_761_0_6, 85, G__get_linked_tagnum(&G__ArDictionaryLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ArIO::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__ArDictionary_761_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ArIO::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__ArDictionary_761_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ArIO::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__ArDictionary_761_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ArIO::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__ArDictionaryLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ArDictionary_761_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__ArDictionary_761_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ArIO::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__ArDictionary_761_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ArIO::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__ArDictionary_761_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ArIO::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__ArDictionary_761_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ArIO::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("ArIO", 331, G__ArDictionary_761_0_18, (int) ('i'), G__get_linked_tagnum(&G__ArDictionaryLN_ArIO), -1, 0, 1, 1, 1, 0, "u 'ArIO' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ArIO", 457, G__ArDictionary_761_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ArDictionary_761_0_20, (int) ('u'), G__get_linked_tagnum(&G__ArDictionaryLN_ArIO), -1, 1, 1, 1, 1, 0, "u 'ArIO' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncArPMT(void) {
   /* ArPMT */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ArDictionaryLN_ArPMT));
   G__memfunc_setup("ArPMT",420,G__ArDictionary_762_0_1, 105, G__get_linked_tagnum(&G__ArDictionaryLN_ArPMT), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Reset",515,G__ArDictionary_762_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FullScale",891,G__ArDictionary_762_0_3, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Offset",615,G__ArDictionary_762_0_4, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Coupling",833,G__ArDictionary_762_0_5, 108, -1, G__defined_typename("Long_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BandWidth",885,G__ArDictionary_762_0_6, 108, -1, G__defined_typename("Long_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DiscThrs",804,G__ArDictionary_762_0_7, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PeakFraction",1207,G__ArDictionary_762_0_8, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Calibration",1128,G__ArDictionary_762_0_9, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Delay",495,G__ArDictionary_762_0_10, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Pedestal",818,G__ArDictionary_762_0_11, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PedTimeMin",972,G__ArDictionary_762_0_12, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PedTimeMax",974,G__ArDictionary_762_0_13, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PedMin",573,G__ArDictionary_762_0_14, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PedMax",575,G__ArDictionary_762_0_15, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PedMean",666,G__ArDictionary_762_0_16, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PedSigma",778,G__ArDictionary_762_0_17, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PedChi2",607,G__ArDictionary_762_0_18, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PedNpe",572,G__ArDictionary_762_0_19, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PedIntegral",1103,G__ArDictionary_762_0_20, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PedIntegralPe",1284,G__ArDictionary_762_0_21, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PedTimePe",861,G__ArDictionary_762_0_22, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PeakStartTime",1310,G__ArDictionary_762_0_23, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PeakTime",784,G__ArDictionary_762_0_24, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PeakValue",894,G__ArDictionary_762_0_25, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PeakIsSaturated",1514,G__ArDictionary_762_0_26, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NPeaks",578,G__ArDictionary_762_0_27, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Npe",291,G__ArDictionary_762_0_28, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PeakTimes",899,G__ArDictionary_762_0_29, 117, G__get_linked_tagnum(&G__ArDictionaryLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<int>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PeakIntegral",1207,G__ArDictionary_762_0_30, 117, G__get_linked_tagnum(&G__ArDictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PeakAmplitude",1318,G__ArDictionary_762_0_31, 117, G__get_linked_tagnum(&G__ArDictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SumPeakIntegralPMT",1757,G__ArDictionary_762_0_32, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Integral",822,G__ArDictionary_762_0_33, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IntegralPe",1003,G__ArDictionary_762_0_34, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IntegralPeS",1086,G__ArDictionary_762_0_35, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TimePe",580,G__ArDictionary_762_0_36, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IntegralSinglet0",1596,G__ArDictionary_762_0_37, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IntegralSinglet1",1597,G__ArDictionary_762_0_38, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CR",149,G__ArDictionary_762_0_39, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CRPe",330,G__ArDictionary_762_0_40, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CRPeS",413,G__ArDictionary_762_0_41, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Branch",590,G__ArDictionary_762_0_42, 85, G__get_linked_tagnum(&G__ArDictionaryLN_TBranch), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Tree",400,G__ArDictionary_762_0_43, 85, G__get_linked_tagnum(&G__ArDictionaryLN_TTree), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HPedestal",890,G__ArDictionary_762_0_44, 85, G__get_linked_tagnum(&G__ArDictionaryLN_TH1F), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFullScale",1191,G__ArDictionary_762_0_45, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - fullscale", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetOffset",915,G__ArDictionary_762_0_46, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - offset", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCoupling",1133,G__ArDictionary_762_0_47, 121, -1, -1, 0, 1, 1, 1, 0, "l - 'Long_t' 0 - coupling", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBandWidth",1185,G__ArDictionary_762_0_48, 121, -1, -1, 0, 1, 1, 1, 0, "l - 'Long_t' 0 - bandwidth", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDiscThrs",1104,G__ArDictionary_762_0_49, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - discthrs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCalibration",1428,G__ArDictionary_762_0_50, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - cal", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDelay",795,G__ArDictionary_762_0_51, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - delay", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPedestal",1118,G__ArDictionary_762_0_52, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - pedestal", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPeakFraction",1507,G__ArDictionary_762_0_53, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPedTimeMin",1272,G__ArDictionary_762_0_54, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPedTimeMax",1274,G__ArDictionary_762_0_55, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPedMin",873,G__ArDictionary_762_0_56, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPedMax",875,G__ArDictionary_762_0_57, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPedMean",966,G__ArDictionary_762_0_58, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPedSigma",1078,G__ArDictionary_762_0_59, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPedChi2",907,G__ArDictionary_762_0_60, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPedNpe",872,G__ArDictionary_762_0_61, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPedIntegral",1403,G__ArDictionary_762_0_62, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPedIntegralPe",1584,G__ArDictionary_762_0_63, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPedTimePe",1161,G__ArDictionary_762_0_64, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPeakStartTime",1610,G__ArDictionary_762_0_65, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPeakTime",1084,G__ArDictionary_762_0_66, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPeakValue",1194,G__ArDictionary_762_0_67, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPeakIsSaturated",1814,G__ArDictionary_762_0_68, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNPeaks",878,G__ArDictionary_762_0_69, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNpe",591,G__ArDictionary_762_0_70, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetIntegral",1122,G__ArDictionary_762_0_71, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetIntegralPe",1303,G__ArDictionary_762_0_72, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetIntegralPeS",1386,G__ArDictionary_762_0_73, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTimePe",880,G__ArDictionary_762_0_74, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetIntegralSinglet0",1896,G__ArDictionary_762_0_75, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetIntegralSinglet1",1897,G__ArDictionary_762_0_76, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCR",449,G__ArDictionary_762_0_77, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCRPe",630,G__ArDictionary_762_0_78, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCRPeS",713,G__ArDictionary_762_0_79, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBranch",890,G__ArDictionary_762_0_80, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TBranch' - 0 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTree",700,G__ArDictionary_762_0_81, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TTree' - 0 - t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTree",700,G__ArDictionary_762_0_82, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TFile' - 0 - f i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadEvent",898,G__ArDictionary_762_0_83, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindPeaks",885,G__ArDictionary_762_0_84, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - start i - 'Int_t' 0 - stop", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CheckPeakSaturation",1929,G__ArDictionary_762_0_85, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CountPeaks",1021,G__ArDictionary_762_0_86, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - tmax d - 'Double_t' 0 - sigma", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPedestalTimeRange",2010,G__ArDictionary_762_0_87, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - start i - 'Int_t' 0 - stop", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RawEvaluatePedestal",1939,G__ArDictionary_762_0_88, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EvaluatePedestalWithGaussianFit",3171,G__ArDictionary_762_0_89, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EvaluatePedestalWithPhotonSuppression",3880,G__ArDictionary_762_0_90, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EvaluatePeakStartTime",2133,G__ArDictionary_762_0_91, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - margin", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EvaluateIntegral",1645,G__ArDictionary_762_0_92, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - singletintegrationtime d - 'Double_t' 0 - tmax", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FFT",224,G__ArDictionary_762_0_93, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'TArrayD' - 1 - data k - - 0 - nn "
"i - 'Int_t' 0 - isign", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FilterBackground",1638,G__ArDictionary_762_0_94, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - cutsize", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ScaleData",866,G__ArDictionary_762_0_95, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - scale", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintData",903,G__ArDictionary_762_0_96, 121, -1, -1, 0, 1, 1, 1, 0, "E - - 0 'stdout' fp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__ArDictionary_762_0_97, 121, -1, -1, 0, 1, 1, 1, 0, "E - - 0 'stdout' fp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintReco",918,G__ArDictionary_762_0_98, 121, -1, -1, 0, 1, 1, 1, 0, "E - - 0 'stdout' fp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintRawData",1201,G__ArDictionary_762_0_99, 121, -1, -1, 0, 1, 1, 1, 0, "E - - 0 'stdout' fp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClearHistograms",1544,G__ArDictionary_762_0_100, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__ArDictionary_762_0_101, 85, G__get_linked_tagnum(&G__ArDictionaryLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ArPMT::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__ArDictionary_762_0_102, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ArPMT::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__ArDictionary_762_0_103, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ArPMT::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__ArDictionary_762_0_104, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ArPMT::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__ArDictionaryLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ArDictionary_762_0_108, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__ArDictionary_762_0_109, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ArPMT::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__ArDictionary_762_0_110, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ArPMT::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__ArDictionary_762_0_111, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ArPMT::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__ArDictionary_762_0_112, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ArPMT::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("ArPMT", 420, G__ArDictionary_762_0_113, (int) ('i'), G__get_linked_tagnum(&G__ArDictionaryLN_ArPMT), -1, 0, 1, 1, 1, 0, "u 'ArPMT' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ArPMT", 546, G__ArDictionary_762_0_114, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ArDictionary_762_0_115, (int) ('u'), G__get_linked_tagnum(&G__ArDictionaryLN_ArPMT), -1, 1, 1, 1, 1, 0, "u 'ArPMT' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncArRun(void) {
   /* ArRun */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ArDictionaryLN_ArRun));
   G__memfunc_setup("ArRun",488,G__ArDictionary_767_0_1, 105, G__get_linked_tagnum(&G__ArDictionaryLN_ArRun), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ArRun",488,G__ArDictionary_767_0_2, 105, G__get_linked_tagnum(&G__ArDictionaryLN_ArRun), -1, 0, 2, 1, 1, 0, 
"C - - 10 - path i - 'Int_t' 0 - runnumber", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RunNumber",926,G__ArDictionary_767_0_3, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FileNumber",1001,G__ArDictionary_767_0_4, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EventNumber",1131,G__ArDictionary_767_0_5, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("unixTime",851,G__ArDictionary_767_0_6, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NPMTs",434,G__ArDictionary_767_0_7, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TTT",252,G__ArDictionary_767_0_8, 72, -1, G__defined_typename("uint32_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Delay",495,G__ArDictionary_767_0_9, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NumberOfSamples",1523,G__ArDictionary_767_0_10, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPMT",529,G__ArDictionary_767_0_11, 85, G__get_linked_tagnum(&G__ArDictionaryLN_ArPMT), -1, 0, 1, 1, 1, 0, "i - - 0 - pmtid", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVPMT",615,G__ArDictionary_767_0_12, 85, G__get_linked_tagnum(&G__ArDictionaryLN_ArPMT), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TotalNumberOfFiles",1813,G__ArDictionary_767_0_13, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NumberOfEventsInFile",1994,G__ArDictionary_767_0_14, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CurrentFileNumber",1740,G__ArDictionary_767_0_15, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CurrentEventNumber",1870,G__ArDictionary_767_0_16, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NSamples",803,G__ArDictionary_767_0_17, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadEvent",898,G__ArDictionary_767_0_18, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - evtid", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadEvent",898,G__ArDictionary_767_0_19, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "n - 'Long64_t' 0 - evtid", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadConfig",982,G__ArDictionary_767_0_20, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Reset",515,G__ArDictionary_767_0_21, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BeginningOfEvent",1608,G__ArDictionary_767_0_22, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddPMT",506,G__ArDictionary_767_0_23, 85, G__get_linked_tagnum(&G__ArDictionaryLN_ArPMT), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__ArDictionary_767_0_24, 85, G__get_linked_tagnum(&G__ArDictionaryLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ArRun::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__ArDictionary_767_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ArRun::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__ArDictionary_767_0_26, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ArRun::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__ArDictionary_767_0_27, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ArRun::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__ArDictionaryLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ArDictionary_767_0_31, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__ArDictionary_767_0_32, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ArRun::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__ArDictionary_767_0_33, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ArRun::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__ArDictionary_767_0_34, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ArRun::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__ArDictionary_767_0_35, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ArRun::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("ArRun", 488, G__ArDictionary_767_0_36, (int) ('i'), G__get_linked_tagnum(&G__ArDictionaryLN_ArRun), -1, 0, 1, 1, 1, 0, "u 'ArRun' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ArRun", 614, G__ArDictionary_767_0_37, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ArDictionary_767_0_38, (int) ('u'), G__get_linked_tagnum(&G__ArDictionaryLN_ArRun), -1, 1, 1, 1, 1, 0, "u 'ArRun' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncArAnalysis(void) {
   /* ArAnalysis */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ArDictionaryLN_ArAnalysis));
   G__memfunc_setup("ArAnalysis",1015,G__ArDictionary_789_0_1, 105, G__get_linked_tagnum(&G__ArDictionaryLN_ArAnalysis), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Reset",515,G__ArDictionary_789_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Run",309,G__ArDictionary_789_0_3, 85, G__get_linked_tagnum(&G__ArDictionaryLN_ArRun), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MeanRun",694,G__ArDictionary_789_0_4, 85, G__get_linked_tagnum(&G__ArDictionaryLN_ArRun), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRun",609,G__ArDictionary_789_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "U 'ArRun' - 0 - run", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ApplyConfiguration",1886,G__ArDictionary_789_0_6, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ConvertData",1115,G__ArDictionary_789_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CorrectData",1100,G__ArDictionary_789_0_8, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindPedestal",1203,G__ArDictionary_789_0_9, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindSignal",991,G__ArDictionary_789_0_10, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFakeSignal",1281,G__ArDictionary_789_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - time", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindSignalWithOfflineTrigger",2834,G__ArDictionary_789_0_12, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - threshold i - 'Int_t' 0 - majority", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EvaluateIntegral",1645,G__ArDictionary_789_0_13, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillVirtualChannel",1831,G__ArDictionary_789_0_14, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ShiftVirtualChannel",1950,G__ArDictionary_789_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - reftime", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AnalyseVirtualChannel",2157,G__ArDictionary_789_0_16, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EvaluateChannelsFromVirtualChannel",3479,G__ArDictionary_789_0_17, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FilterBackground",1638,G__ArDictionary_789_0_18, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMeanTrace",1180,G__ArDictionary_789_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "U 'ArRun' - 0 - run", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ResetMeanTrace",1395,G__ArDictionary_789_0_20, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillMeanTrace",1271,G__ArDictionary_789_0_21, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ScaleMeanTrace",1368,G__ArDictionary_789_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - nentries", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintMeanTrace",1405,G__ArDictionary_789_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "E - - 0 'stdout' fp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Triggered",925,G__ArDictionary_789_0_24, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTriggered",1225,G__ArDictionary_789_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__ArDictionary_789_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "E - - 0 'stdout' fp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClearHistograms",1544,G__ArDictionary_789_0_27, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__ArDictionary_789_0_28, 85, G__get_linked_tagnum(&G__ArDictionaryLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ArAnalysis::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__ArDictionary_789_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ArAnalysis::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__ArDictionary_789_0_30, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ArAnalysis::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__ArDictionary_789_0_31, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ArAnalysis::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__ArDictionaryLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ArDictionary_789_0_35, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__ArDictionary_789_0_36, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ArAnalysis::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__ArDictionary_789_0_37, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ArAnalysis::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__ArDictionary_789_0_38, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ArAnalysis::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__ArDictionary_789_0_39, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ArAnalysis::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("ArAnalysis", 1015, G__ArDictionary_789_0_40, (int) ('i'), G__get_linked_tagnum(&G__ArDictionaryLN_ArAnalysis), -1, 0, 1, 1, 1, 0, "u 'ArAnalysis' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ArAnalysis", 1141, G__ArDictionary_789_0_41, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ArDictionary_789_0_42, (int) ('u'), G__get_linked_tagnum(&G__ArDictionaryLN_ArAnalysis), -1, 1, 1, 1, 1, 0, "u 'ArAnalysis' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncArDisplay(void) {
   /* ArDisplay */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ArDictionaryLN_ArDisplay));
   G__memfunc_setup("ArDisplay",905,G__ArDictionary_795_0_1, 105, G__get_linked_tagnum(&G__ArDictionaryLN_ArDisplay), -1, 0, 5, 1, 1, 0, 
"U 'TGWindow' - 10 - p h - 'UInt_t' 0 - w "
"h - 'UInt_t' 0 - h U 'ArAnalysis' - 0 - analysis "
"U 'ArRun' - 0 - run", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initialize",1042,G__ArDictionary_795_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Process",735,G__ArDictionary_795_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadEvent",898,G__ArDictionary_795_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NextEvent",929,G__ArDictionary_795_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PreviousEvent",1375,G__ArDictionary_795_0_6, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AnalyseEvent",1231,G__ArDictionary_795_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CleanGraphs",1096,G__ArDictionary_795_0_8, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DisplayEvent",1240,G__ArDictionary_795_0_9, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RedisplayEvent",1455,G__ArDictionary_795_0_10, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DisplayTraceAll",1502,G__ArDictionary_795_0_11, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DisplayTraceSum",1530,G__ArDictionary_795_0_12, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DisplayPlotsPeakTime",2040,G__ArDictionary_795_0_13, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DisplayPlotsCRvsIntegral",2460,G__ArDictionary_795_0_14, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DisplayPlotsPedestal",2074,G__ArDictionary_795_0_15, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__ArDictionary_795_0_16, 85, G__get_linked_tagnum(&G__ArDictionaryLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ArDisplay::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__ArDictionary_795_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ArDisplay::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__ArDictionary_795_0_18, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ArDisplay::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__ArDictionary_795_0_19, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ArDisplay::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__ArDictionaryLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ArDictionary_795_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__ArDictionary_795_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ArDisplay::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__ArDictionary_795_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ArDisplay::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__ArDictionary_795_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ArDisplay::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__ArDictionary_795_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ArDisplay::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~ArDisplay", 1031, G__ArDictionary_795_0_28, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncArRecoPMT(void) {
   /* ArRecoPMT */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ArDictionaryLN_ArRecoPMT));
   G__memfunc_setup("ArRecoPMT",813,G__ArDictionary_796_0_1, 105, G__get_linked_tagnum(&G__ArDictionaryLN_ArRecoPMT), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ArRecoPMT",813,G__ArDictionary_796_0_2, 105, G__get_linked_tagnum(&G__ArDictionaryLN_ArRecoPMT), -1, 0, 1, 1, 1, 0, "U 'ArPMT' - 0 - pmt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Reset",515,G__ArDictionary_796_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ID",141,G__ArDictionary_796_0_4, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Name",385,G__ArDictionary_796_0_5, 117, G__get_linked_tagnum(&G__ArDictionaryLN_TString), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Type",418,G__ArDictionary_796_0_6, 117, G__get_linked_tagnum(&G__ArDictionaryLN_TString), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PedTimeMin",972,G__ArDictionary_796_0_7, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PedTimeMax",974,G__ArDictionary_796_0_8, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PedMin",573,G__ArDictionary_796_0_9, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PedMax",575,G__ArDictionary_796_0_10, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PedMean",666,G__ArDictionary_796_0_11, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PedSigma",778,G__ArDictionary_796_0_12, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PedChi2",607,G__ArDictionary_796_0_13, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PedNpe",572,G__ArDictionary_796_0_14, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PedIntegral",1103,G__ArDictionary_796_0_15, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PedIntegralPe",1284,G__ArDictionary_796_0_16, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PedTimePe",861,G__ArDictionary_796_0_17, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PeakTime",784,G__ArDictionary_796_0_18, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PeakValue",894,G__ArDictionary_796_0_19, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PeakIsSaturated",1514,G__ArDictionary_796_0_20, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NPeaks",578,G__ArDictionary_796_0_21, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Npe",291,G__ArDictionary_796_0_22, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Integral",822,G__ArDictionary_796_0_23, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PeakTimes",899,G__ArDictionary_796_0_24, 117, G__get_linked_tagnum(&G__ArDictionaryLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<int>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PeakIntegral",1207,G__ArDictionary_796_0_25, 117, G__get_linked_tagnum(&G__ArDictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PeakAmplitude",1318,G__ArDictionary_796_0_26, 117, G__get_linked_tagnum(&G__ArDictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IntegralPe",1003,G__ArDictionary_796_0_27, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IntegralPeS",1086,G__ArDictionary_796_0_28, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TimePe",580,G__ArDictionary_796_0_29, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IntegralSinglet0",1596,G__ArDictionary_796_0_30, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IntegralSinglet1",1597,G__ArDictionary_796_0_31, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CR",149,G__ArDictionary_796_0_32, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CRPe",330,G__ArDictionary_796_0_33, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CRPeS",413,G__ArDictionary_796_0_34, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetID",441,G__ArDictionary_796_0_35, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetName",685,G__ArDictionary_796_0_36, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetType",718,G__ArDictionary_796_0_37, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPedTimeMin",1272,G__ArDictionary_796_0_38, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPedTimeMax",1274,G__ArDictionary_796_0_39, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPedMin",873,G__ArDictionary_796_0_40, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPedMax",875,G__ArDictionary_796_0_41, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPedMean",966,G__ArDictionary_796_0_42, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPedSigma",1078,G__ArDictionary_796_0_43, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPedChi2",907,G__ArDictionary_796_0_44, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPedNpe",872,G__ArDictionary_796_0_45, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPedIntegral",1403,G__ArDictionary_796_0_46, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPedIntegralPe",1584,G__ArDictionary_796_0_47, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPedTimePe",1161,G__ArDictionary_796_0_48, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPeakTime",1084,G__ArDictionary_796_0_49, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPeakValue",1194,G__ArDictionary_796_0_50, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPeakIsSaturated",1814,G__ArDictionary_796_0_51, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNPeaks",878,G__ArDictionary_796_0_52, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNpe",591,G__ArDictionary_796_0_53, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetIntegral",1122,G__ArDictionary_796_0_54, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetIntegralPe",1303,G__ArDictionary_796_0_55, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetIntegralPeS",1386,G__ArDictionary_796_0_56, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTimePe",880,G__ArDictionary_796_0_57, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetIntegralSinglet0",1896,G__ArDictionary_796_0_58, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetIntegralSinglet1",1897,G__ArDictionary_796_0_59, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCR",449,G__ArDictionary_796_0_60, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCRPe",630,G__ArDictionary_796_0_61, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCRPeS",713,G__ArDictionary_796_0_62, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__ArDictionary_796_0_63, 121, -1, -1, 0, 1, 1, 1, 0, "E - - 0 'stdout' fp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Import",635,G__ArDictionary_796_0_64, 121, -1, -1, 0, 1, 1, 1, 0, "U 'ArPMT' - 0 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__ArDictionary_796_0_65, 85, G__get_linked_tagnum(&G__ArDictionaryLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ArRecoPMT::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__ArDictionary_796_0_66, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ArRecoPMT::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__ArDictionary_796_0_67, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ArRecoPMT::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__ArDictionary_796_0_68, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ArRecoPMT::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__ArDictionaryLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ArDictionary_796_0_72, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__ArDictionary_796_0_73, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ArRecoPMT::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__ArDictionary_796_0_74, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ArRecoPMT::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__ArDictionary_796_0_75, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ArRecoPMT::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__ArDictionary_796_0_76, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ArRecoPMT::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("ArRecoPMT", 813, G__ArDictionary_796_0_77, (int) ('i'), G__get_linked_tagnum(&G__ArDictionaryLN_ArRecoPMT), -1, 0, 1, 1, 1, 0, "u 'ArRecoPMT' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ArRecoPMT", 939, G__ArDictionary_796_0_78, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ArDictionary_796_0_79, (int) ('u'), G__get_linked_tagnum(&G__ArDictionaryLN_ArRecoPMT), -1, 1, 1, 1, 1, 0, "u 'ArRecoPMT' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncArOutput(void) {
   /* ArOutput */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ArDictionaryLN_ArOutput));
   G__memfunc_setup("ArOutput",836,G__ArDictionary_797_0_1, 105, G__get_linked_tagnum(&G__ArDictionaryLN_ArOutput), -1, 0, 1, 1, 1, 0, "C - - 10 - filename", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Open",402,G__ArDictionary_797_0_2, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Cd",167,G__ArDictionary_797_0_3, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillData",769,G__ArDictionary_797_0_4, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "U 'ArRun' - 0 - run", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillMeanTrace",1271,G__ArDictionary_797_0_5, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "U 'ArAnalysis' - 0 - analysis", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Close",502,G__ArDictionary_797_0_6, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__ArDictionary_797_0_7, 85, G__get_linked_tagnum(&G__ArDictionaryLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ArOutput::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__ArDictionary_797_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ArOutput::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__ArDictionary_797_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ArOutput::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__ArDictionary_797_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ArOutput::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__ArDictionaryLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ArDictionary_797_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__ArDictionary_797_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ArOutput::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__ArDictionary_797_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ArOutput::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__ArDictionary_797_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ArOutput::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__ArDictionary_797_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ArOutput::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("ArOutput", 836, G__ArDictionary_797_0_19, (int) ('i'), G__get_linked_tagnum(&G__ArDictionaryLN_ArOutput), -1, 0, 1, 1, 1, 0, "u 'ArOutput' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ArOutput", 962, G__ArDictionary_797_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ArDictionary_797_0_21, (int) ('u'), G__get_linked_tagnum(&G__ArDictionaryLN_ArOutput), -1, 1, 1, 1, 1, 0, "u 'ArOutput' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncArDictionary() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {
}

static void G__cpp_setup_global5() {
}

static void G__cpp_setup_global6() {
   G__memvar_setup((void*)(&ArDBLEVEL),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"ArDBLEVEL=",0,(char*)NULL);

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalArDictionary() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
  G__cpp_setup_global5();
  G__cpp_setup_global6();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcArDictionary() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__ArDictionaryLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__ArDictionaryLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__ArDictionaryLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__ArDictionaryLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__ArDictionaryLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__ArDictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR = { "vector<double,allocator<double> >" , 99 , -1 };
G__linked_taginfo G__ArDictionaryLN_basic_ifstreamlEcharcOchar_traitslEchargRsPgR = { "basic_ifstream<char,char_traits<char> >" , 99 , -1 };
G__linked_taginfo G__ArDictionaryLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__ArDictionaryLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__ArDictionaryLN_TClonesArray = { "TClonesArray" , 99 , -1 };
G__linked_taginfo G__ArDictionaryLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__ArDictionaryLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__ArDictionaryLN_TQObject = { "TQObject" , 99 , -1 };
G__linked_taginfo G__ArDictionaryLN_TGWindow = { "TGWindow" , 99 , -1 };
G__linked_taginfo G__ArDictionaryLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__ArDictionaryLN_TFile = { "TFile" , 99 , -1 };
G__linked_taginfo G__ArDictionaryLN_TCanvas = { "TCanvas" , 99 , -1 };
G__linked_taginfo G__ArDictionaryLN_pairlEunsignedsPintcOintgR = { "pair<unsigned int,int>" , 115 , -1 };
G__linked_taginfo G__ArDictionaryLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR = { "vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >" , 99 , -1 };
G__linked_taginfo G__ArDictionaryLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::iterator>" , 99 , -1 };
G__linked_taginfo G__ArDictionaryLN_TH1F = { "TH1F" , 99 , -1 };
G__linked_taginfo G__ArDictionaryLN_TGObject = { "TGObject" , 99 , -1 };
G__linked_taginfo G__ArDictionaryLN_TGFrame = { "TGFrame" , 99 , -1 };
G__linked_taginfo G__ArDictionaryLN_TGCompositeFrame = { "TGCompositeFrame" , 99 , -1 };
G__linked_taginfo G__ArDictionaryLN_TGMainFrame = { "TGMainFrame" , 99 , -1 };
G__linked_taginfo G__ArDictionaryLN_TRootEmbeddedCanvas = { "TRootEmbeddedCanvas" , 99 , -1 };
G__linked_taginfo G__ArDictionaryLN_TGCheckButton = { "TGCheckButton" , 99 , -1 };
G__linked_taginfo G__ArDictionaryLN_TGNumberEntry = { "TGNumberEntry" , 99 , -1 };
G__linked_taginfo G__ArDictionaryLN_TArrayI = { "TArrayI" , 99 , -1 };
G__linked_taginfo G__ArDictionaryLN_TF1 = { "TF1" , 99 , -1 };
G__linked_taginfo G__ArDictionaryLN_TArrayD = { "TArrayD" , 99 , -1 };
G__linked_taginfo G__ArDictionaryLN_TArrayS = { "TArrayS" , 99 , -1 };
G__linked_taginfo G__ArDictionaryLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__ArDictionaryLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__ArDictionaryLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__ArDictionaryLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__ArDictionaryLN_TTree = { "TTree" , 99 , -1 };
G__linked_taginfo G__ArDictionaryLN_TBranch = { "TBranch" , 99 , -1 };
G__linked_taginfo G__ArDictionaryLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__ArDictionaryLN_ArDetector = { "ArDetector" , 99 , -1 };
G__linked_taginfo G__ArDictionaryLN_ArConfiguration = { "ArConfiguration" , 99 , -1 };
G__linked_taginfo G__ArDictionaryLN_ArIO = { "ArIO" , 99 , -1 };
G__linked_taginfo G__ArDictionaryLN_ArPMT = { "ArPMT" , 99 , -1 };
G__linked_taginfo G__ArDictionaryLN_vectorlEintcOallocatorlEintgRsPgR = { "vector<int,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__ArDictionaryLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<int,allocator<int> >::iterator>" , 99 , -1 };
G__linked_taginfo G__ArDictionaryLN_ArRun = { "ArRun" , 99 , -1 };
G__linked_taginfo G__ArDictionaryLN_vectorlEstringcOallocatorlEstringgRsPgR = { "vector<string,allocator<string> >" , 99 , -1 };
G__linked_taginfo G__ArDictionaryLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<string,allocator<string> >::iterator>" , 99 , -1 };
G__linked_taginfo G__ArDictionaryLN_ArDMData = { "ArDMData" , 99 , -1 };
G__linked_taginfo G__ArDictionaryLN_vectorlEINDEXITEMcOallocatorlEINDEXITEMgRsPgR = { "vector<INDEXITEM,allocator<INDEXITEM> >" , 99 , -1 };
G__linked_taginfo G__ArDictionaryLN_reverse_iteratorlEvectorlEINDEXITEMcOallocatorlEINDEXITEMgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<INDEXITEM,allocator<INDEXITEM> >::iterator>" , 99 , -1 };
G__linked_taginfo G__ArDictionaryLN_ArAnalysis = { "ArAnalysis" , 99 , -1 };
G__linked_taginfo G__ArDictionaryLN_TGStatusBar = { "TGStatusBar" , 99 , -1 };
G__linked_taginfo G__ArDictionaryLN_ArDisplay = { "ArDisplay" , 99 , -1 };
G__linked_taginfo G__ArDictionaryLN_ArRecoPMT = { "ArRecoPMT" , 99 , -1 };
G__linked_taginfo G__ArDictionaryLN_ArOutput = { "ArOutput" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableArDictionary() {
  G__ArDictionaryLN_TClass.tagnum = -1 ;
  G__ArDictionaryLN_TBuffer.tagnum = -1 ;
  G__ArDictionaryLN_TMemberInspector.tagnum = -1 ;
  G__ArDictionaryLN_TObject.tagnum = -1 ;
  G__ArDictionaryLN_TString.tagnum = -1 ;
  G__ArDictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR.tagnum = -1 ;
  G__ArDictionaryLN_basic_ifstreamlEcharcOchar_traitslEchargRsPgR.tagnum = -1 ;
  G__ArDictionaryLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__ArDictionaryLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__ArDictionaryLN_TClonesArray.tagnum = -1 ;
  G__ArDictionaryLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__ArDictionaryLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__ArDictionaryLN_TQObject.tagnum = -1 ;
  G__ArDictionaryLN_TGWindow.tagnum = -1 ;
  G__ArDictionaryLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__ArDictionaryLN_TFile.tagnum = -1 ;
  G__ArDictionaryLN_TCanvas.tagnum = -1 ;
  G__ArDictionaryLN_pairlEunsignedsPintcOintgR.tagnum = -1 ;
  G__ArDictionaryLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR.tagnum = -1 ;
  G__ArDictionaryLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__ArDictionaryLN_TH1F.tagnum = -1 ;
  G__ArDictionaryLN_TGObject.tagnum = -1 ;
  G__ArDictionaryLN_TGFrame.tagnum = -1 ;
  G__ArDictionaryLN_TGCompositeFrame.tagnum = -1 ;
  G__ArDictionaryLN_TGMainFrame.tagnum = -1 ;
  G__ArDictionaryLN_TRootEmbeddedCanvas.tagnum = -1 ;
  G__ArDictionaryLN_TGCheckButton.tagnum = -1 ;
  G__ArDictionaryLN_TGNumberEntry.tagnum = -1 ;
  G__ArDictionaryLN_TArrayI.tagnum = -1 ;
  G__ArDictionaryLN_TF1.tagnum = -1 ;
  G__ArDictionaryLN_TArrayD.tagnum = -1 ;
  G__ArDictionaryLN_TArrayS.tagnum = -1 ;
  G__ArDictionaryLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__ArDictionaryLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__ArDictionaryLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__ArDictionaryLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__ArDictionaryLN_TTree.tagnum = -1 ;
  G__ArDictionaryLN_TBranch.tagnum = -1 ;
  G__ArDictionaryLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__ArDictionaryLN_ArDetector.tagnum = -1 ;
  G__ArDictionaryLN_ArConfiguration.tagnum = -1 ;
  G__ArDictionaryLN_ArIO.tagnum = -1 ;
  G__ArDictionaryLN_ArPMT.tagnum = -1 ;
  G__ArDictionaryLN_vectorlEintcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__ArDictionaryLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__ArDictionaryLN_ArRun.tagnum = -1 ;
  G__ArDictionaryLN_vectorlEstringcOallocatorlEstringgRsPgR.tagnum = -1 ;
  G__ArDictionaryLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__ArDictionaryLN_ArDMData.tagnum = -1 ;
  G__ArDictionaryLN_vectorlEINDEXITEMcOallocatorlEINDEXITEMgRsPgR.tagnum = -1 ;
  G__ArDictionaryLN_reverse_iteratorlEvectorlEINDEXITEMcOallocatorlEINDEXITEMgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__ArDictionaryLN_ArAnalysis.tagnum = -1 ;
  G__ArDictionaryLN_TGStatusBar.tagnum = -1 ;
  G__ArDictionaryLN_ArDisplay.tagnum = -1 ;
  G__ArDictionaryLN_ArRecoPMT.tagnum = -1 ;
  G__ArDictionaryLN_ArOutput.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableArDictionary() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__ArDictionaryLN_TClass);
   G__get_linked_tagnum_fwd(&G__ArDictionaryLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__ArDictionaryLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__ArDictionaryLN_TObject);
   G__get_linked_tagnum_fwd(&G__ArDictionaryLN_TString);
   G__get_linked_tagnum_fwd(&G__ArDictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR);
   G__get_linked_tagnum_fwd(&G__ArDictionaryLN_basic_ifstreamlEcharcOchar_traitslEchargRsPgR);
   G__get_linked_tagnum_fwd(&G__ArDictionaryLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__ArDictionaryLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__ArDictionaryLN_TClonesArray);
   G__get_linked_tagnum_fwd(&G__ArDictionaryLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__ArDictionaryLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__ArDictionaryLN_TQObject);
   G__get_linked_tagnum_fwd(&G__ArDictionaryLN_TGWindow);
   G__get_linked_tagnum_fwd(&G__ArDictionaryLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__ArDictionaryLN_TFile);
   G__get_linked_tagnum_fwd(&G__ArDictionaryLN_TCanvas);
   G__get_linked_tagnum_fwd(&G__ArDictionaryLN_pairlEunsignedsPintcOintgR);
   G__get_linked_tagnum_fwd(&G__ArDictionaryLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__ArDictionaryLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__ArDictionaryLN_TH1F);
   G__get_linked_tagnum_fwd(&G__ArDictionaryLN_TGObject);
   G__get_linked_tagnum_fwd(&G__ArDictionaryLN_TGFrame);
   G__get_linked_tagnum_fwd(&G__ArDictionaryLN_TGCompositeFrame);
   G__get_linked_tagnum_fwd(&G__ArDictionaryLN_TGMainFrame);
   G__get_linked_tagnum_fwd(&G__ArDictionaryLN_TRootEmbeddedCanvas);
   G__get_linked_tagnum_fwd(&G__ArDictionaryLN_TGCheckButton);
   G__get_linked_tagnum_fwd(&G__ArDictionaryLN_TGNumberEntry);
   G__get_linked_tagnum_fwd(&G__ArDictionaryLN_TArrayI);
   G__get_linked_tagnum_fwd(&G__ArDictionaryLN_TF1);
   G__get_linked_tagnum_fwd(&G__ArDictionaryLN_TArrayD);
   G__get_linked_tagnum_fwd(&G__ArDictionaryLN_TArrayS);
   G__get_linked_tagnum_fwd(&G__ArDictionaryLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ArDictionaryLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__ArDictionaryLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__ArDictionaryLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__ArDictionaryLN_TTree);
   G__get_linked_tagnum_fwd(&G__ArDictionaryLN_TBranch);
   G__get_linked_tagnum_fwd(&G__ArDictionaryLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ArDictionaryLN_ArDetector),sizeof(ArDetector),-1,29952,(char*)NULL,G__setup_memvarArDetector,G__setup_memfuncArDetector);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ArDictionaryLN_ArConfiguration),sizeof(ArConfiguration),-1,62720,(char*)NULL,G__setup_memvarArConfiguration,G__setup_memfuncArConfiguration);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ArDictionaryLN_ArIO),sizeof(ArIO),-1,29952,(char*)NULL,G__setup_memvarArIO,G__setup_memfuncArIO);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ArDictionaryLN_ArPMT),sizeof(ArPMT),-1,29952,(char*)NULL,G__setup_memvarArPMT,G__setup_memfuncArPMT);
   G__get_linked_tagnum_fwd(&G__ArDictionaryLN_vectorlEintcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__ArDictionaryLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ArDictionaryLN_ArRun),sizeof(ArRun),-1,62720,(char*)NULL,G__setup_memvarArRun,G__setup_memfuncArRun);
   G__get_linked_tagnum_fwd(&G__ArDictionaryLN_vectorlEstringcOallocatorlEstringgRsPgR);
   G__get_linked_tagnum_fwd(&G__ArDictionaryLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__ArDictionaryLN_ArDMData);
   G__get_linked_tagnum_fwd(&G__ArDictionaryLN_vectorlEINDEXITEMcOallocatorlEINDEXITEMgRsPgR);
   G__get_linked_tagnum_fwd(&G__ArDictionaryLN_reverse_iteratorlEvectorlEINDEXITEMcOallocatorlEINDEXITEMgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ArDictionaryLN_ArAnalysis),sizeof(ArAnalysis),-1,29952,(char*)NULL,G__setup_memvarArAnalysis,G__setup_memfuncArAnalysis);
   G__get_linked_tagnum_fwd(&G__ArDictionaryLN_TGStatusBar);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ArDictionaryLN_ArDisplay),sizeof(ArDisplay),-1,62464,(char*)NULL,G__setup_memvarArDisplay,G__setup_memfuncArDisplay);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ArDictionaryLN_ArRecoPMT),sizeof(ArRecoPMT),-1,62720,(char*)NULL,G__setup_memvarArRecoPMT,G__setup_memfuncArRecoPMT);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ArDictionaryLN_ArOutput),sizeof(ArOutput),-1,62464,(char*)NULL,G__setup_memvarArOutput,G__setup_memfuncArOutput);
}
extern "C" void G__cpp_setupArDictionary(void) {
  G__check_setup_version(30051515,"G__cpp_setupArDictionary()");
  G__set_cpp_environmentArDictionary();
  G__cpp_setup_tagtableArDictionary();

  G__cpp_setup_inheritanceArDictionary();

  G__cpp_setup_typetableArDictionary();

  G__cpp_setup_memvarArDictionary();

  G__cpp_setup_memfuncArDictionary();
  G__cpp_setup_globalArDictionary();
  G__cpp_setup_funcArDictionary();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncArDictionary();
  return;
}
class G__cpp_setup_initArDictionary {
  public:
    G__cpp_setup_initArDictionary() { G__add_setup_func("ArDictionary",(G__incsetup)(&G__cpp_setupArDictionary)); G__call_setup_funcs(); }
   ~G__cpp_setup_initArDictionary() { G__remove_setup_func("ArDictionary"); }
};
G__cpp_setup_initArDictionary G__cpp_setup_initializerArDictionary;

